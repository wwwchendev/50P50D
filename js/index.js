(()=>{"use strict";var e={966:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},572:(e,t,n)=>{e.exports=n.p+"assets/scenery.png"},640:(e,t,n)=>{e.exports=n.p+"assets/video.mp4"},794:(e,t,n)=>{e.exports=n.p+"assets/帆船石.jpg"},67:(e,t,n)=>{e.exports=n.p+"assets/後壁湖漁港.jpg"},716:(e,t,n)=>{e.exports=n.p+"assets/恆春小鎮.jpg"},555:(e,t,n)=>{e.exports=n.p+"assets/關山日落.jpg"},188:(e,t,n)=>{e.exports=n.p+"assets/鵝鑾鼻燈塔.jpg"},480:(e,t,n)=>{e.exports=n.p+"assets/龍磐公園.jpg"},20:(e,t,n)=>{e.exports=n.p+"assets/1.png"},629:(e,t,n)=>{e.exports=n.p+"assets/2.png"},778:(e,t,n)=>{e.exports=n.p+"assets/3.png"},213:(e,t,n)=>{e.exports=n.p+"assets/4.png"},673:(e,t,n)=>{e.exports=n.p+"assets/5.png"},298:(e,t,n)=>{e.exports=n.p+"assets/DanoSongs - Inspirabeat.mp3"},377:(e,t,n)=>{e.exports=n.p+"assets/Danosongs - Bright Brazil.mp3"},275:(e,t,n)=>{e.exports=n.p+"assets/Danosongs - Feeling of Sunlight.mp3"}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,n),o.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&!e;)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e+"../"})(),n.b=document.baseURI||self.location.href,(()=>{var e={};function t(e,t){var n=[];return function(e,t,n){void 0===n&&(n={});var a=n.decode,i=void 0===a?function(e){return e}:a;return function(n){var a=e.exec(n);if(!a)return!1;for(var o=a[0],s=a.index,r=Object.create(null),c=function(e){if(void 0===a[e])return"continue";var n=t[e-1];"*"===n.modifier||"+"===n.modifier?r[n.name]=a[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)})):r[n.name]=i(a[e],n)},l=1;l<a.length;l++)c(l);return{path:o,index:s,params:r}}}(s(e,n,t),n,t)}function a(e){return e.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function i(e){return e&&e.sensitive?"":"i"}function o(e,t,n){return function(e,t,n){void 0===n&&(n={});for(var o=n.strict,s=void 0!==o&&o,r=n.start,c=void 0===r||r,l=n.end,d=void 0===l||l,u=n.encode,p=void 0===u?function(e){return e}:u,m=n.delimiter,f=void 0===m?"/#?":m,h=n.endsWith,v="[".concat(a(void 0===h?"":h),"]|$"),g="[".concat(a(f),"]"),y=c?"^":"",b=0,E=e;b<E.length;b++){var w=E[b];if("string"==typeof w)y+=a(p(w));else{var x=a(p(w.prefix)),L=a(p(w.suffix));if(w.pattern)if(t&&t.push(w),x||L)if("+"===w.modifier||"*"===w.modifier){var S="*"===w.modifier?"?":"";y+="(?:".concat(x,"((?:").concat(w.pattern,")(?:").concat(L).concat(x,"(?:").concat(w.pattern,"))*)").concat(L,")").concat(S)}else y+="(?:".concat(x,"(").concat(w.pattern,")").concat(L,")").concat(w.modifier);else"+"===w.modifier||"*"===w.modifier?y+="((?:".concat(w.pattern,")").concat(w.modifier,")"):y+="(".concat(w.pattern,")").concat(w.modifier);else y+="(?:".concat(x).concat(L,")").concat(w.modifier)}}if(d)s||(y+="".concat(g,"?")),y+=n.endsWith?"(?=".concat(v,")"):"$";else{var k=e[e.length-1],D="string"==typeof k?g.indexOf(k[k.length-1])>-1:void 0===k;s||(y+="(?:".concat(g,"(?=").concat(v,"))?")),D||(y+="(?=".concat(g,"|").concat(v,")"))}return new RegExp(y,i(n))}(function(e,t){void 0===t&&(t={});for(var n=function(e){for(var t=[],n=0;n<e.length;){var a=e[n];if("*"!==a&&"+"!==a&&"?"!==a)if("\\"!==a)if("{"!==a)if("}"!==a)if(":"!==a)if("("!==a)t.push({type:"CHAR",index:n,value:e[n++]});else{var i=1,o="";if("?"===e[r=n+1])throw new TypeError('Pattern cannot start with "?" at '.concat(r));for(;r<e.length;)if("\\"!==e[r]){if(")"===e[r]){if(0==--i){r++;break}}else if("("===e[r]&&(i++,"?"!==e[r+1]))throw new TypeError("Capturing groups are not allowed at ".concat(r));o+=e[r++]}else o+=e[r++]+e[r++];if(i)throw new TypeError("Unbalanced pattern at ".concat(n));if(!o)throw new TypeError("Missing pattern at ".concat(n));t.push({type:"PATTERN",index:n,value:o}),n=r}else{for(var s="",r=n+1;r<e.length;){var c=e.charCodeAt(r);if(!(c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122||95===c))break;s+=e[r++]}if(!s)throw new TypeError("Missing parameter name at ".concat(n));t.push({type:"NAME",index:n,value:s}),n=r}else t.push({type:"CLOSE",index:n,value:e[n++]});else t.push({type:"OPEN",index:n,value:e[n++]});else t.push({type:"ESCAPED_CHAR",index:n++,value:e[n++]});else t.push({type:"MODIFIER",index:n,value:e[n++]})}return t.push({type:"END",index:n,value:""}),t}(e),i=t.prefixes,o=void 0===i?"./":i,s="[^".concat(a(t.delimiter||"/#?"),"]+?"),r=[],c=0,l=0,d="",u=function(e){if(l<n.length&&n[l].type===e)return n[l++].value},p=function(e){var t=u(e);if(void 0!==t)return t;var a=n[l],i=a.type,o=a.index;throw new TypeError("Unexpected ".concat(i," at ").concat(o,", expected ").concat(e))},m=function(){for(var e,t="";e=u("CHAR")||u("ESCAPED_CHAR");)t+=e;return t};l<n.length;){var f=u("CHAR"),h=u("NAME"),v=u("PATTERN");if(h||v){var g=f||"";-1===o.indexOf(g)&&(d+=g,g=""),d&&(r.push(d),d=""),r.push({name:h||c++,prefix:g,suffix:"",pattern:v||s,modifier:u("MODIFIER")||""})}else{var y=f||u("ESCAPED_CHAR");if(y)d+=y;else if(d&&(r.push(d),d=""),u("OPEN")){g=m();var b=u("NAME")||"",E=u("PATTERN")||"",w=m();p("CLOSE"),r.push({name:b||(E?c++:""),pattern:b&&!E?s:E,prefix:g,suffix:w,modifier:u("MODIFIER")||""})}else p("END")}}return r}(e,n),t,n)}function s(e,t,n){return e instanceof RegExp?function(e,t){if(!t)return e;for(var n=/\((?:\?<(.*?)>)?(?!\?)/g,a=0,i=n.exec(e.source);i;)t.push({name:i[1]||a++,prefix:"",suffix:"",modifier:"",pattern:""}),i=n.exec(e.source);return e}(e,t):Array.isArray(e)?function(e,t,n){var a=e.map((function(e){return s(e,t,n).source}));return new RegExp("(?:".concat(a.join("|"),")"),i(n))}(e,t,n):o(e,t,n)}n.r(e),n.d(e,{hasBrowserEnv:()=>jt,hasStandardBrowserEnv:()=>Ot,hasStandardBrowserWebWorkerEnv:()=>Pt});const r='<main class="container"> <div class="title notFound topOffset"> <h2> <i class="fa-solid fa-triangle-exclamation"></i> 查無此頁 </h2> <p>Not Found</p> </div> </main>',c='<main class="projectContainer day01"> <div class="panel active" id="panelTaipei101"> <div class="description"> <h3>霞暮101</h3> <p>每到初秋，由象山頂望向101，美麗的霞慕非常迷人真是台灣之最。</p> </div> </div> <div class="panel" id="yehliu-geopark"> <div class="description"> <h3>野柳石光夜訪女王</h3> <p>野柳石光夜訪女王，女王頭光雕藝術</p> </div> </div> <div class="panel" id="taichung"> <div class="description"> <h3>台中公園之美</h3> <p>台中公園是全台有名的地標，在夜晚華燈初上更加亮麗美觀。</p> </div> </div> <div class="panel" id="tainan"> <div class="description"> <h3>台南奇美博物館</h3> <p>台灣藝文生活的興盛，提供來台的旅客不同的旅遊方向，讓旅客看到台灣文靜而生動的一面。</p> </div> </div> <div class="panel" id="kaoshiung"> <div class="description"> <h3>高雄龍虎塔</h3> <p>匯集台灣許多國際知名的地標或景點，希望外國旅客看到此影片能夠產生對台灣印象的共鳴。</p> </div> </div> </main> <footer> <h2>01 expanding-cards</h2> </footer> ',l='<main class="projectContainer day02"> <div class="progress-container"> <div class="progressBar" id="progressBar"></div> <div class="circle active">1</div> <div class="circle">2</div> <div class="circle">3</div> <div class="circle">4</div> </div> <div class="btns"> <button class="btn" id="prev" disabled="disabled">Prev</button> <button class="btn" id="next">Next</button> </div> </main> <footer> <h2>02 progress steps</h2> </footer>';var d=n(966),u=n.n(d),p=new URL(n(572),n.b);const m='<main class="projectContainer day03" id="day03"> <div class="circle-container"> <div class="circle"> <button id="close"> <i class="fas fa-times"> </i> </button> <button id="open"> <i class="fas fa-bars"> </i> </button> </div> </div> <div class="container"> <div class="content"> <h1>Amazing Article</h1> <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut numquam accusantium quo velit quasi a non doloribus ipsum, magni consectetur eaque repellendus dolore, amet, nihil eligendi sed neque sit natus dolorem cum temporibus odio est fugit? Accusantium libero recusandae quisquam porro dolorem incidunt earum expedita perspiciatis fuga. Ea totam, doloremque, dignissimos commodi at repellat sapiente eius, aspernatur esse nulla quod voluptate iste atque. Laborum tempore et, optio veniam aspernatur, magnam quod quis veritatis, nisi sit quae! Recusandae id, veritatis assumenda distinctio unde voluptatum rem optio delectus suscipit itaque repellat exercitationem architecto dolorem aliquid harum hic velit quia ab explicabo error.</p> <h3>Shuihuan Cave in Rueifang</h3> <img src="'+u()(p)+'" alt="瑞芳水湳洞"> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit, vero corrupti. Enim minima tenetur excepturi veniam! Blanditiis officiis voluptas, ab eveniet, quod accusantium provident, voluptatem repellendus earum doloribus eos dolore quo! Aliquam iusto quas reiciendis? Vitae similique illo, consectetur alias autem reiciendis vero eum itaque impedit ab sapiente eius vel voluptas quas. Nulla corporis ipsam, officia doloremque a fuga labore ratione deserunt commodi unde quos alias sapiente magnam, consequatur, iste possimus repellat. Incidunt labore maxime, asperiores ratione libero odit quasi magnam blanditiis saepe corporis optio ut dignissimos eaque sint molestias iste? Exercitationem debitis sed suscipit quo eveniet sapiente! Nemo, optio!</p> </div> </div> <nav> <ul> <li><a href="#/03"><i class="fas fa-home"></i>Home</a></li> <li><a href="#/03"><i class="fas fa-user-alt"></i>About</a></li> <li><a href="#/03"><i class="fas fa-envelope"></i>Contact</a></li> </ul> </nav> </main> <footer> <h2>03 rotating navigation</h2> </footer>',f='<main class="projectContainer day04"> <div class="search"> <input type="text" class="input" placeholder="Search..."> <button class="btn"> <i class="fas fa-search"></i> </button> </div> </main> <footer> <h2>04 hidden search</h2> </footer>';var h=new URL(n(640),n.b);const v='<main class="projectContainer day05"> <h1 class="hidden" id="day05Title">阿里山傷心山日落雲海</h1> <div class="loading-text">0%</div> <section class="blur"> <video muted loop> <source src="'+u()(h)+'" type="video/mp4"> </video> </section> </main> <footer> <h2>05 blurry loading</h2> </footer>';var g=new URL(n(716),n.b),y=new URL(n(67),n.b),b=new URL(n(794),n.b),E=new URL(n(188),n.b),w=new URL(n(555),n.b),x=new URL(n(480),n.b);const L='<main class="projectContainer day06"> <h1> Scroll to see the animation⏬ </h1> <div class="articleWrap"> <article> <div class="picture"> <img src="'+u()(g)+'" alt="恆春小鎮"> </div> <div class="content"> <p>恆春小鎮</p> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p> </div> </article> <article> <div class="picture"> <img src="'+u()(y)+'" alt="後壁湖漁港"> </div> <div class="content"> <p>後壁湖漁港</p> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p> </div> </article> <article> <div class="picture"> <img src="'+u()(b)+'" alt="帆船石"> </div> <div class="content"> <p>帆船石</p> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p> </div> </article> <article> <div class="picture"> <img src="'+u()(E)+'" alt="鵝鑾鼻燈塔"> </div> <div class="content"> <p>鵝鑾鼻燈塔</p> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p> </div> </article> <article> <div class="picture"> <img src="'+u()(w)+'" alt="關山日落"> </div> <div class="content"> <p>關山日落</p> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p> </div> </article> <article> <div class="picture"> <img src="'+u()(x)+'" alt="龍磐公園"> </div> <div class="content"> <p>龍磐公園</p> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p> </div> </article> </div> </main> <footer> <h2>06 scroll animation</h2> </footer>',S='<main class="projectContainer day07"> <div class="container"> <div class="split left"> <div class="content"> <h1>小籠包</h1> <p>滋味鮮美、湯汁鮮香</p> <a href="#/07" class="btn"> <i class="fa-solid fa-plus" style="color:#fff"></i> 加入餐點 </a> </div> </div> <div class="split right"> <div class="content"> <h1>牛肉麵</h1> <p>濃郁牛肉湯底，肉質鮮嫩</p> <a href="#/07" class="btn"> <i class="fa-solid fa-plus" style="color:#fff"></i> 加入餐點 </a> </div> </div> </div> </main> <footer> <h2>07 Split Landing Page</h2> </footer>',k='<main class="projectContainer day08"> <div class="container"> <h1>登入帳號</h1> <form> <div class="form-control"> <input type="text" required> <label>Email</label> </div> <div class="form-control"> <input type="password" required> <label for="">Password</label> </div> <button class="btn">登入</button> <p class="text">尚未註冊會員？ <a href="#/08">立即註冊</a> </p> </form> </div> </main> <footer> <h2>08 form wave</h2> </footer>';var D=new URL(n(298),n.b),T=new URL(n(377),n.b),q=new URL(n(275),n.b);const C='<main class="projectContainer day09"> <div class="container"> <div class="currentPlay bg-gradient-reverse"> <div class="albumCover bg-gradient"> <p>Electronic</p> </div> <p>Electronic - Upbeat</p> <span>DanoSongs</span> </div> <ul> <label> <button id="togglePlayBtn" class=""> <i id="btnPause" class="bi bi-pause-fill"></i> <i id="btnPlay" class="bi bi-play-fill"></i> </button> Song List </label> <li class="song"> <div class="thumbnail bg-gradient"></div> <div class="songinfo"> <p>Inspirabeat</p> <span>DanoSongs</span> <a href="#/09"><i class="bi bi-three-dots"></i></a> </div> <audio class="sound" src="'+u()(D)+'"></audio> </li> <li class="song"> <div class="thumbnail bg-gradient"></div> <div class="songinfo"> <p>Bright Brazil</p> <span>DanoSongs</span> <a href="#/09"><i class="bi bi-three-dots"></i></a> </div> <audio class="sound" src="'+u()(T)+'"></audio> </li> <li class="song"> <div class="thumbnail bg-gradient"></div> <div class="songinfo"> <p>Feeling of Sunlight</p> <span>DanoSongs</span> <a href="#/09"><i class="bi bi-three-dots"></i></a> </div> <audio class="sound" src="'+u()(q)+'"></audio> </li> </ul> <pre> Music by DanoSongs. <a href="https://danosongs.com/licenses" target="_blank">licenses</a></pre> </div> </main> <footer> <h2>09 Soun Boar</h2> </footer>',A='<main class="projectContainer day10"> <div class="container"> <h3>Random Dad-Joke</h3> <div id="joke" class="joke"> //Joke goes here </div> <button id="jokeBtn" class="btn">換一個</button> </div> </main> <footer> <h2>10 Dad Jokes</h2> </footer>',j='<main class="projectContainer day11"> <div id="insert"> <div class="key"> Press any key to get the keycode. </div> </div> </main> <footer> <h2>11 Event Keycodes</h2> </footer>',O='<main class="projectContainer day12"> <h1>常見問答</h1> <div class="faq-container"> <div class="faq active"> <h3 class="faq-title"> 為什麼大象不會用電腦？ </h3> <p class="faq-text"> 因為它們怕踩到鼠標！ </p> <button class="faq-toggle"> <i class="fas fa-chevron-down"></i> <i class="fas fa-times"></i> </button> </div> <div class="faq"> <h3 class="faq-title"> 猴子最討厭什麼線？ </h3> <p class="faq-text"> 平行線，因為沒有相交（香蕉） </p> <button class="faq-toggle"> <i class="fas fa-chevron-down"></i> <i class="fas fa-times"></i> </button> </div> <div class="faq"> <h3 class="faq-title"> 有一棵三角形的樹送到北極去種，長大後變成什麼? </h3> <p class="faq-text"> 三角函數(寒樹) </p> <button class="faq-toggle"> <i class="fas fa-chevron-down"></i> <i class="fas fa-times"></i> </button> </div> <div class="faq"> <h3 class="faq-title"> 米粉闖禍了，誰來保護他? </h3> <p class="faq-text"> 肉，因為肉燥(罩)米粉...... </p> <button class="faq-toggle"> <i class="fas fa-chevron-down"></i> <i class="fas fa-times"></i> </button> </div> <div class="faq"> <h3 class="faq-title"> 怎樣使麻雀安靜下來? </h3> <p class="faq-text"> 壓牠一下，因為鴉雀無聲(壓雀無聲) </p> <button class="faq-toggle"> <i class="fas fa-chevron-down"></i> <i class="fas fa-times"></i> </button> </div> </div> </main> <footer> <h2>12 Faq Collapse</h2> </footer>',B='<main class="projectContainer day13"> <div class="container"> <h3>隨機選擇器 <hr>輸入所有選項，並以逗號 (\',\') 分隔。 </h3> <div class="sample"> <p>隨機選項範本: <a href="#/13" class="sampleName">英文名字</a>, <a href="#/13" class="sampleLocation">台灣地點</a>, <a href="#/13" class="sampleFood">美食</a> </p> </div> <textarea placeholder="輸入選項..." id="textarea"></textarea> <button class="btn">送出</button> <div id="tags"> </div> </div> </main> <footer> <h2>13 Random Choice Picker </h2> </footer>',P='<main class="projectContainer day14"> <nav class="" id="nav"> <ul> <li><a href="#/14">首頁</a></li> <li><a href="#/14">作品</a></li> <li><a href="#/14">關於</a></li> <li><a href="#/14">聯絡</a></li> </ul> <button class="icon" id="toggle"> <div class="line line1"></div> <div class="line line2"></div> </button> </nav> </main> <footer> <h2>14 Animated Navigation</h2> </footer>',R='<main class="projectContainer day15"> <div class="counter-container"> <i class="fab fa-twitter fa-3x"></i> <div class="counter" data-target="12000"></div> <span>Twitter Followers</span> </div> <div class="counter-container"> <i class="fab fa-youtube fa-3x"></i> <div class="counter" data-target="5000"></div> <span>YouTube Subscribers</span> </div> <div class="counter-container"> <i class="fab fa-facebook fa-3x"></i> <div class="counter" data-target="7500"></div> <span>Facebook Fans</span> </div> </main> <footer> <h2>15 Incrementing Counter</h2> </footer>',N='<main class="projectContainer day16"> <h1>喝水</h1> <h3>目標: 2 公升</h3> <div class="wrap"> <div class="cup"> <div class="remained" id="remained"> <small>剩餘</small> <span id="liters"><span> </span></span></div> <div class="percentage" id="percentage"> </div> </div> <div class=""> <p class="text">選擇你喝了多少杯水</p> <div class="cups"> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> <div class="cup cup-small">250 ml</div> </div> </div> </div> </main> <footer> <h2>16 drink water</h2> </footer>',I='<main class="projectContainer day17"> <header> <form id="form"> <input type="text" id="search" class="search" placeholder="Search"> </form> </header> <main id="main"> <div class="movie"> <img src="https://images.unsplash.com/photo-1562362841-97d9eae6b213?auto=format&fit=crop&q=80&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&w=987" alt="${title}"> <div class="movie-info"> <h3>Movie Title</h3> <span class="green">9.8</span> </div> <div class="overview"> <h3>Overview</h3> Lorem ipsum dolor sit amet consectetur, adipisicing elit. Atque ipsa exercitationem ipsum dignissimos eveniet ad maiores eum optio eius inventore? </div> </div> <div class="movie"> <img src="https://images.unsplash.com/photo-1562362841-97d9eae6b213?auto=format&fit=crop&q=80&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&w=987" alt="${title}"> <div class="movie-info"> <h3>Movie Title</h3> <span class="orange">9.8</span> </div> <div class="overview"> <h3>Overview</h3> Lorem ipsum dolor sit amet consectetur, adipisicing elit. Atque ipsa exercitationem ipsum dignissimos eveniet ad maiores eum optio eius inventore? </div> </div> <div class="movie"> <img src="https://images.unsplash.com/photo-1562362841-97d9eae6b213?auto=format&fit=crop&q=80&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&w=987" alt="${title}"> <div class="movie-info"> <h3>Movie Title</h3> <span class="red">9.8</span> </div> <div class="overview"> <h3>Overview</h3> Lorem ipsum dolor sit amet consectetur, adipisicing elit. Atque ipsa exercitationem ipsum dignissimos eveniet ad maiores eum optio eius inventore? </div> </div> </main> </main> <footer> <h2>17 Movie App</h2> </footer>',M='<main class="projectContainer day18" id="day18"> <div class="slider-container"> <div class="slide active" style="background-image:url(\'https://source.unsplash.com/random/800x600\')"> </div> <div class="slide" style="background-image:url(\'https://source.unsplash.com/random/800x601\')"> </div> <div class="slide" style="background-image:url(\'https://source.unsplash.com/random/800x602\')"> </div> <div class="slide" style="background-image:url(\'https://source.unsplash.com/random/800x603\')"> </div> <div class="slide" style="background-image:url(\'https://source.unsplash.com/random/800x604\')"> </div> </div> <button class="arrow left-arrow" id="left"> <i class="fas fa-arrow-left"></i> </button> <button class="arrow right-arrow" id="right"> <i class="fas fa-arrow-right"></i> </button> </main> <footer> <h2>18 Background Slider</h2> </footer>',F='<main class="projectContainer day19"> <button class="toggle">切換暗色主題</button> <div class="clock-container"> <div class="clock"> <span class="hourText hour3">3</span> <span class="hourText hour6">6</span> <span class="hourText hour9">9</span> <span class="hourText hour12">12</span> <div class="needle hour"></div> <div class="needle minute"></div> <div class="needle second"></div> <div class="center-point"></div> </div> <div class="time">11:12 PM</div> <div class="date">星期五, OCT 19</div> </div> </main> <footer> <h2>19 Theme Clock</h2> </footer>',H='<main class="projectContainer day20"> <button class="ripple">點擊按鈕</button> </main> <footer> <h2>20 Button Ripple Effect</h2> </footer>',_='<main class="projectContainer day21"> <div class="empty"> <div class="fill" draggable="true"></div> </div> <div class="empty"> </div> <div class="empty"></div> <div class="empty"></div> <div class="empty"></div> </main> <footer> <h2>21 Drag N Drop</h2> </footer>',$='<main class="projectContainer day22"> <div class="canvaWrap"> <canvas id="canvas" width="800" height="500"> </canvas> <div class="toolbox"> <div class="brushTool"> <button id="decrease"> <i class="bi bi-dash-circle-dotted"></i> </button> <span id="size">5</span> <button id="increase"> <i class="bi bi-plus-circle-dotted"></i> </button> <input type="color" id="color"> </div> <div class="clearTool"> <button id="eraser" class=""> <i class="bi bi-eraser-fill"></i> </button> <button id="clear"> <i class="bi bi-stars"></i> </button> </div> </div> </div> </main> <footer> <h2>22 Drawing App</h2> </footer> <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">',U='<main class="projectContainer day23"> <div class="kinetic"></div> </main> <footer> <h2>23 Kinetic Loader </h2> </footer>',z='<main class="projectContainer day24"> <div class="card"> <div class="card-header animated-bg" id="day24Header">&nbsp; </div> <div class="card-content"> <h3 class="card-title animated-bg animated-bg-text" id="day24Title"> </h3> <p class="card-excerpt" id="day24Excerpt"> &nbsp; <span class="animated-bg animated-bg-text">&nbsp; </span> <span class="animated-bg animated-bg-text">&nbsp;</span> <span class="animated-bg animated-bg-text">&nbsp;</span> </p> <div class="author"> <div class="profile-img animated-bg" id="day24Profile_img"> &nbsp; </div> <div class="author-info"> <strong class="animated-bg animated-bg-text" id="day24Name"> &nbsp; </strong> <small class="animated-bg animated-bg-text" id="day24Date"> &nbsp; </small> </div> </div> </div> </div> </main> <footer> <h2>24 Content Placeholder</h2> </footer>',J='<main class="projectContainer day25"> <header> <nav> <a href="#/25"> <h1>My website</h1> </a> <ul> <li><a href="#/25" class="active">首頁</a></li> <li><a href="#/25">關於</a></li> <li><a href="#/25">服務</a></li> <li><a href="#/25">聯絡</a></li> </ul> </nav> </header> <div class="banner"> <div class="webintro"> <h2>歡迎光臨我的網站</h2> <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Doloremque, sint!</p> </div> </div> <div class="content"> <h4>Content One</h4> <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ratione dolorem voluptates eveniet tempora ut cupiditate magnam, sapiente, hic quo in ipsum iste soluta eaque perferendis nihil recusandae dolore officia aperiam corporis similique. Facilis quos tempore labore totam! Consectetur molestiae iusto ducimus error reiciendis aspernatur dolor, modi dolorem sit architecto, voluptate magni sunt unde est quas? Voluptates a dolorum voluptatum quo perferendis aut sit. Aspernatur libero laboriosam ab eligendi omnis delectus earum labore, placeat officiis sint illum rem voluptas ipsum repellendus iste eius recusandae quae excepturi facere, iure rerum sequi? Illum velit delectus dicta et iste dolorum obcaecati minus odio eligendi!</p> <h4>Content Two</h4> <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ratione dolorem voluptates eveniet tempora ut cupiditate magnam, sapiente, hic quo in ipsum iste soluta eaque perferendis nihil recusandae dolore officia aperiam corporis similique. Facilis quos tempore labore totam! Consectetur molestiae iusto ducimus error reiciendis aspernatur dolor, modi dolorem sit architecto, voluptate magni sunt unde est quas? Voluptates a dolorum voluptatum quo perferendis aut sit. Aspernatur libero laboriosam ab eligendi omnis delectus earum labore, placeat officiis sint illum rem voluptas ipsum repellendus iste eius recusandae quae excepturi facere, iure rerum sequi? Illum velit delectus dicta et iste dolorum obcaecati minus odio eligendi!</p> </div> </main> <footer> <h2>25 Sticky Navbar</h2> </footer>',W='<main class="projectContainer day26"> <div class="slider-container"> <div class="left-slide"> <div style="background-color:#fd3555"> <h1>Nature flower</h1> <p>all in pink</p> </div> <div style="background-color:#2a86ba"> <h1>Bluuue Sky</h1> <p>with it\'s mountains</p> </div> <div style="background-color:#252e33"> <h1>Lonely castle</h1> <p>in the wilderness</p> </div> <div style="background-color:#ffb866"> <h1>Flying eagle</h1> <p>in the sunset</p> </div> </div> <div class="right-slide"> <div style="background-image:url(\'https://images.unsplash.com/photo-1508768787810-6adc1f613514?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=e27f6661df21ed17ab5355b28af8df4e&auto=format&fit=crop&w=1350&q=80\')"> </div> <div style="background-image:url(\'https://images.unsplash.com/photo-1519981593452-666cf05569a9?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=90ed8055f06493290dad8da9584a13f7&auto=format&fit=crop&w=715&q=80\')"> </div> <div style="background-image:url(\'https://images.unsplash.com/photo-1486899430790-61dbf6f6d98b?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=8ecdee5d1b3ed78ff16053b0227874a2&auto=format&fit=crop&w=1002&q=80\')"> </div> <div style="background-image:url(\'https://images.unsplash.com/photo-1510942201312-84e7962f6dbb?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=da4ca7a78004349f1b63f257e50e4360&auto=format&fit=crop&w=1050&q=80\')"> </div> </div> <div class="action-buttons"> <button class="down-button"> <i class="fas fa-arrow-down"></i> </button> <button class="up-button"> <i class="fas fa-arrow-up"></i> </button> </div> </div> </main> <footer> <h2>26 Double Vertical Slider</h2> </footer>',G='<main class="projectContainer day27"> <div id="toasts"></div> <button class="btn" id="button">顯示通知</button> </main> <footer> <h2>27 Toast Notification</h2> </footer>',V='<main class="projectContainer day28"> <form action="" class="user-form" id="form"> <input type="text" id="search" placeholder="輸入想搜尋的GitHub用戶"> </form> <main id="main"> </main> </main> <footer> <h2>28 Github Profiles</h2> </footer>',K='<main class="projectContainer day29"> <h3>雙擊圖片給予<i class="fas fa-heart"></i>表示喜歡</h3> <small>已按like <span id="times">0</span> 次</small> <div class="loveMe"></div> </main> <footer> <h2>29 Double Click Heart</h2> </footer>',Q='<main class="projectContainer day30"> <h1 id="result">Starting...</h1> <div class="inputHere"> <div class="contentHere"> <label for="inputText">內容:</label> <input type="text" id="text" placeholder="輸入想說的話..."> </div> <div class="speedHere"> <label for="speed">速度:</label> <input type="number" name="speed" id="speed" value="1" min="1" max="10" step="1"> <input type="submit" id="submit" value="送出"> </div> </div> </main> <footer> <h2>30 Auto Text Effect</h2> </footer>',Y='<main class="projectContainer day31"> <div class="container"> <h2>密碼產生器</h2> <div class="result-container"> <span id="result"></span> <button class="btn" id="clipboard"> <i class="far fa-clipboard"></i> </button> </div> <div class="settings"> <div class="setting"> <label>高強度密碼產生器</label> <input type="number" id="length" min="4" max="20" value="20"> </div> <div class="setting"> <label>包含大寫字母</label> <input type="checkbox" id="uppercase" checked="checked"> </div> <div class="setting"> <label>包含小寫字母</label> <input type="checkbox" id="lowercase" checked="checked"> </div> <div class="setting"> <label>包含數字</label> <input type="checkbox" id="numbers" checked="checked"> </div> <div class="setting"> <label>包含符號</label> <input type="checkbox" id="symbols" checked="checked"> </div> </div> <button class="btn btn-large" id="generate"> 產生密碼 </button> </div> </main> <footer> <h2>31 Password Generator</h2> </footer>',X='<main class="projectContainer day32"> <div class="container"> <h2>南臺灣二日遊行程(擇二)</h2> <div class="toggle-container"> <input type="checkbox" id="tainan" class="toggle" checked="checked"> <label for="tainan" class="label"> <div class="ball"></div> </label> <span>台南安平老街</span> </div> <div class="toggle-container"> <input type="checkbox" id="kaohsiung" class="toggle"> <label for="kaohsiung" class="label"> <div class="ball"></div> </label> <span>高雄紅毛港文化園區</span> </div> <div class="toggle-container"> <input type="checkbox" id="pingtung" class="toggle"> <label for="pingtung" class="label"> <div class="ball"></div> </label> <span>屏東恆春小鎮</span> </div> </div> </main> <footer> <h2>32 Good Cheap Fast</h2> </footer>',Z='<main class="projectContainer day33" id="day33main"> <button class="add" id="add"> <i class="fas fa-plus"></i> 新增便籤 </button> </main> <footer> <h2>33 Notes App</h2> </footer>',ee='<main class="projectContainer day34"> <div class="counter"> <div class="nums"> <span class="in">3</span> <span>2</span> <span>1</span> <span>0</span> </div> <h4>準備開始囉</h4> </div> <div class="final"> <h1>GO! </h1> <button id="replay"> <span>重新載入</span> </button> </div> </main> <footer> <h2>34 Animated Count down </h2> </footer>';var te=new URL(n(20),n.b),ne=new URL(n(629),n.b),ae=new URL(n(778),n.b),ie=new URL(n(213),n.b),oe=new URL(n(673),n.b);const se='<main class="projectContainer day35"> <div class="carousel"> <div class="image-container" id="imgs"> <img src="'+u()(te)+'"/> <img src="'+u()(ne)+'"/> <img src="'+u()(ae)+'"/> <img src="'+u()(ie)+'"/> <img src="'+u()(oe)+'"/> </div> <div class="buttons-container"> <button id="left" class="btn">Prev</button> <button id="right" class="btn">Next</button> </div> </div> </main> <footer> <h2>35 Image Carousel</h2> </footer>',re='<main class="projectContainer day36"> <div class="container" id="container"></div> </main> <footer> <h2>36 Hoverboard</h2> </footer>',ce='<main class="projectContainer day37"> <h1>寶可夢圖鑑</h1> <div class="poke-container" id="poke-container"> </div> </main> <footer> <h2>37 Pokedex </h2> </footer>',le='<main class="projectContainer day38"> <div class="phone"> <img src="https://images.unsplash.com/photo-1480074568708-e7b720bb3f09?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1053&q=80" alt="home" class="content show"> <img src="https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80" alt="work" class="content"> <img src="https://images.unsplash.com/photo-1471107340929-a87cd0f5b5f3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1266&q=80" alt="blog" class="content"> <img src="https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80" alt="about" class="content"> <nav> <ul> <li class="active"> <i class="fas fa-home"></i> <p>首頁</p> </li> <li> <i class="fas fa-box"></i> <p>作品</p> </li> <li> <i class="fas fa-book-open"></i> <p>部落格</p> </li> <li> <i class="fas fa-users"></i> <p>關於我</p> </li> </ul> </nav> </div> </main> <footer> <h2>38 Mobile Tab Navigation</h2> </footer>',de='<main class="projectContainer day39"> <div class="background" id="background"></div> <div class="bg-white rounded p-10 text-center shadow-md form"> <h1 class="text-3xl">登入帳號</h1> <p class="text-sm text-red-500">增強密碼強度時圖片將變得清晰</p> <div class="my-4 text-left"> <label for="email" class="text-gray-900">帳號 (註冊時填寫的信箱)</label> <input type="text" class="border block w-full p-2 mt-2 rounded" id="email" placeholder="Enter Email"/> </div> <div class="my-4 text-left"> <label for="email" class="text-gray-900">密碼</label> <input type="password" class="border block w-full p-2 mt-2 rounded" id="password" placeholder="Enter Password"/> </div> <button class="bg-black text-white py-2 mt-4 inline-block w-full rounded" type="submit"> 登入 </button> </div> </main> <footer> <h2>39 Password Strength Backgrounds</h2> </footer>',ue='<main class="projectContainer day40"> <button id="btn" class="magic">變魔法🎩</button> <div id="boxes" class="boxes big"> </div> </main> <footer> <h2>40 3d Background Boxes</h2> </footer>',pe='<main class="projectContainer day41"> <div class="main"> <h2>驗證你的電子郵件</h2> <p>我們已將六位數驗證碼寄到您的信箱 cool_guy@email.com <br/> 請於下方欄位輸入代碼以確認你的電子郵件地址 </p> <div class="code-container"> <input type="number" class="code" placeholder="0" min="0" max="9" required> <input type="number" class="code" placeholder="0" min="0" max="9" required> <input type="number" class="code" placeholder="0" min="0" max="9" required> <input type="number" class="code" placeholder="0" min="0" max="9" required> <input type="number" class="code" placeholder="0" min="0" max="9" required> <input type="number" class="code" placeholder="0" min="0" max="9" required> </div> <div class="btnGroup"> <button class="reset"> 清空 </button> <button class="submit"> 提交 </button> </div> </div> <div class=""> <h4>沒有收到驗證信嗎?</h4> <div class=""> <a href="#/41">使用另一個電子信箱</a> <a href="#/41">重新寄送驗證信</a> </div> </div> </main> <footer> <h2>41 Verify Account Ui</h2> </footer>',me='<main class="projectContainer day42"> <div class="container"> <header class="header"> <h4 class="title">線上用戶篩選</h4> <small class="subtitle">按名稱或位置搜尋</small> <input type="text" id="filter" placeholder="搜尋..."> </header> <ul id="result" class="user-list"> <li> <img src="https://randomuser.me/api/portraits/women/33.jpg" alt="Sara"> <div class="user-info"> <h4>Sara Smith</h4> <p>Wexford,Ireland</p> </div> </li> <li> <img src="https://randomuser.me/api/portraits/women/33.jpg" alt="Sara"> <div class="user-info"> <h4>Sara Smith</h4> <p>Wexford,Ireland</p> </div> </li> <li> <img src="https://randomuser.me/api/portraits/women/33.jpg" alt="Sara"> <div class="user-info"> <h4>Sara Smith</h4> <p>Wexford,Ireland</p> </div> </li> <li> <h3>Loading...</h3> </li> </ul> </div> </main> <footer> <h2>42 Live User Filter</h2> </footer>',fe='<main class="projectContainer day43"> <div id="panel" class="panel-container"> <h2>客戶服務滿意度調查</h2> <div class="ratings-container"> <div class="rating"> <img src="https://img.icons8.com/external-neu-royyan-wijaya/64/000000/external-emoji-neumojis-smiley-neu-royyan-wijaya-17.png" alt="不滿意"> <small>不滿意</small> </div> <div class="rating"> <img src="https://img.icons8.com/external-neu-royyan-wijaya/64/000000/external-emoji-neumojis-smiley-neu-royyan-wijaya-3.png" alt="普通"/> <small>普通</small> </div> <div class="rating active"> <img src="https://img.icons8.com/external-neu-royyan-wijaya/64/000000/external-emoji-neumojis-smiley-neu-royyan-wijaya-30.png" alt="滿意"/> <small>滿意</small> </div> </div> <button class="btn" id="send">送出</button> </div> </main> <footer> <h2>43 Feedback Ui Design</h2> </footer>',he='<main class="projectContainer day44"> <h2>自訂範圍滑桿</h2> <div class="range-container"> <input type="range" id="range" min="0" max="100"> <label for="range">50</label> </div> </main> <footer> <h2>44 Custom Range Slider</h2> </footer>',ve='<main class="projectContainer day45"> <button class="nav-btn open-btn"> <i class="fas fa-bars"></i> </button> <img src="https://logos-download.com/wp-content/uploads/2016/03/Netflix_Logo_2014-700x188.png" alt="Logo" class="logo"> <p class="text">移動導航</p> <div class="nav nav-black"> <div class="nav nav-red"> <nav class="nav nav-white"> <button class="nav-btn close-btn"> <i class="fas fa-times"></i> </button> <img src="https://logos-download.com/wp-content/uploads/2016/03/Netflix_Logo_2014-700x188.png" alt="Logo" class="logo"> <ul class="list"> <li><a href="#/45">首頁</a></li> <li><a href="#/45">節目</a></li> <li><a href="#/45">電影</a></li> <li><a href="#/45">最新熱門影片</a></li> <li> <ul> <li><a href="#/45">榮登本日台灣 Top 10 電影</a></li> <li><a href="#/45">榮登本日台灣 Top 10 節目</a></li> <li><a href="#/45">現正熱播</a></li> </ul> </li> <li><a href="#/45">我的片單</a></li> </ul> </nav> </div> </div> </main> <footer> <h2>45 Netflix Mobile Navigation</h2> </footer>',ge='<main class="projectContainer day46"> <div class="quiz-container" id="quiz"> <div class="quiz-header"> <h3 id="quizNum">第 1 題</h3> <h2 id="question">哪一顆行星是太陽系中最大的行星？</h2> <ul> <li> <input type="radio" name="answer" id="a" class="answer"> <label for="a" id="a_text">水星</label> </li> <li> <input type="radio" name="answer" id="b" class="answer"> <label for="b" id="b_text">地球</label> </li> <li> <input type="radio" name="answer" id="c" class="answer"> <label for="c" id="c_text">木星</label> </li> <li> <input type="radio" name="answer" id="d" class="answer"> <label for="d" id="d_text">金星</label> </li> </ul> </div> <button id="submit">送出答案</button> </div> </main> <footer> <h2>46 Quiz App</h2> </footer>',ye='<main class="projectContainer day47"> <h1>在地牛肉麵名店</h1> <div class="testimonial-container"> <div class="progress-bar"></div> <div class="fas fa-quote-right fa-quote"></div> <div class="fas fa-quote-left fa-quote"></div> <p class="testimonial"> 這家牛肉麵店真的是我找尋已久的瑰寶！他們的湯底濃郁而充滿層次，牛肉鮮嫩多汁，麵條煮得剛剛好。每次來這裡都是一場味蕾的盛宴，我愛它的無比熱情和品質。 </p> <div class="user"> <img src="https://randomuser.me/api/portraits/men/46.jpg" alt="user" class="user-image"/> <div class="user-details"> <h4 class="username">Josh</h4> <p class="role">牛肉麵狂熱者</p> </div> </div> </div> </main> <footer> <h2>47 Testimonial Box Switcher</h2> </footer>',be='<main class="projectContainer day48"> <h1 class="title">隨機圖片牆</h1> <div class="container"></div> </main> <footer> <h2>48 Random Image Feed</h2> </footer>',Ee='<main class="projectContainer day49"> <h1>Todos</h1> <form id="day49Form"> <input type="text" class="input" id="day49Input" placeholder="輸入待辦事項" autocomplete="off"> <ul class="todos" id="day49Todos"> </ul> </form> <small>左鍵點選切換完成。 <br>右鍵單擊刪除待辦事項</small> </main> <footer> <h2>49 Todo List</h2> </footer>',we='<main class="projectContainer day50"> <div class="screen"> <h1>捕捉昆蟲大作戰</h1> <button class="btn" id="start-btn">開始遊戲</button> </div> <div class="screen"> <h1>最近家裡的OO有夠多</h1> <ul class="insects-list"> <li> <button class="choose-insect-btn"> <p>蒼蠅</p> <img src="http://pngimg.com/uploads/fly/fly_PNG3946.png" alt="蒼蠅"> </button> </li> <li> <button class="choose-insect-btn"> <p>蚊子</p> <img src="http://pngimg.com/uploads/mosquito/mosquito_PNG18175.png" alt="蚊子"/> </button> </li> <li> <button class="choose-insect-btn"> <p>蜘蛛</p> <img src="http://pngimg.com/uploads/spider/spider_PNG12.png" alt="蜘蛛"/> </button> </li> <li> <button class="choose-insect-btn"> <p>蟑螂</p> <img src="http://pngimg.com/uploads/roach/roach_PNG12163.png" alt="蟑螂"/> </button> </li> </ul> </div> <div class="screen game-container" id="game-container"> <h3 id="time" class="time">時間: 00:00</h3> <h3 id="score" class="score">分數: 0</h3> <h5 id="message" class="message"> 開始覺得很煩了嗎? <br> 因為討厭的昆蟲永遠抓不完!! </h5> </div> </main> <footer> <h2>50 Insect Catch Game</h2> </footer>',xe=e=>{const t=document.querySelectorAll(".sidebarItem");function n(e){const t=document.getElementById("sidebar"),n=document.getElementById(`slide${e+1}`);t.scrollTo({top:n.offsetTop-100,behavior:"smooth"})}function a(){t.forEach((e=>{e.classList.remove("active")}))}function i(e){t[e].classList.add("active")}window.addEventListener("keydown",(t=>{"ArrowUp"===t.key&&1!==e?e-=1:"ArrowDown"===t.key&&50!==e&&(e+=1),window.location.href=e<10?`#/0${e}`:`#/${e}`})),t.forEach(((t,o)=>{t.addEventListener("click",(()=>{a(),i(o),n(o)})),o===e-1&&(a(),i(o),n(o))}))},Le=()=>{xe(1);const e=document.querySelectorAll(".panel");e.forEach((t=>{t.addEventListener("click",(()=>{e.forEach((e=>{e.classList.remove("active")})),t.classList.add("active")}))}))},Se=()=>{const e=document.getElementById("progressBar"),t=document.getElementById("prev"),n=document.getElementById("next"),a=document.querySelectorAll(".circle");xe(2);let i=1;function o(){a.forEach(((e,t)=>{t<i?e.classList.add("active"):e.classList.remove("active")})),e.style.width=(i-1)/(a.length-1)*100+"%",1===i?t.disabled=!0:i===a.length?n.disabled=!0:(t.disabled=!1,n.disabled=!1)}n.addEventListener("click",(()=>{i+=1,i>a.length&&(i=a.length),o()})),t.addEventListener("click",(()=>{i-=1,i<1&&(i=1),o()}))},ke=()=>{xe(3);const e=document.getElementById("open"),t=document.getElementById("close"),n=document.getElementById("day03");e.addEventListener("click",(()=>n.classList.add("show-nav"))),t.addEventListener("click",(()=>n.classList.remove("show-nav")))},De=()=>{xe(4);const e=document.querySelector(".search"),t=document.querySelector(".btn"),n=document.querySelector(".input");t.addEventListener("click",(()=>{e.classList.toggle("active"),n.focus()}))},Te=()=>{xe(5);const e=document.querySelector(".loading-text"),t=document.querySelector(".blur"),n=document.querySelector("#day05Title");let a=0;const i=(e,t,n,a,i)=>(e-t)*(i-a)/(n-t)+a;let o;o=setInterval((function(){a+=1,e.textContent=`${a}%`,a>99&&(clearInterval(o),n.classList.remove("hidden"),n.classList.add("typing")),e.style.opacity=i(a,0,100,1,0),t.style.filter=`blur(${i(a,0,100,30,0)}px)`}),30),document.addEventListener("DOMContentLoaded",(()=>{setTimeout((()=>{const e=document.querySelector("video");e&&e.play()}),2e3)}))},qe=()=>{xe(6);const e=document.querySelectorAll("article");function t(){const t=window.innerHeight/10*9;e.forEach((e=>{const{top:n}=e.getBoundingClientRect();n<t?e.classList.add("show"):e.classList.remove("show")}))}document.querySelector(".day06").addEventListener("scroll",t),t()},Ce=()=>{xe(7);const e=document.querySelector(".left"),t=document.querySelector(".right"),n=document.querySelector(".container");e.addEventListener("mouseenter",(()=>{n.classList.add("hover-left")})),e.addEventListener("mouseleave",(()=>{n.classList.remove("hover-left")})),t.addEventListener("mouseenter",(()=>{n.classList.add("hover-right")})),t.addEventListener("mouseleave",(()=>{n.classList.remove("hover-right")}))},Ae=()=>{xe(8),document.querySelectorAll(".form-control label").forEach((e=>{const t=e.innerText.split("").map(((e,t)=>`<span style="transition-delay:${50*t}ms">${e}</span>`)).join("");e.innerHTML=t}))},je=()=>{xe(9);const e=document.querySelectorAll(".song"),t=document.querySelectorAll(".sound"),n=document.getElementById("togglePlayBtn");let a,i=!1;function o(){e.forEach((e=>{e.classList.remove("active")})),a.parentElement.classList.add("active"),i?n.classList.add("active"):n.classList.remove("active")}async function s(){await a.play(),i=!0,o()}async function r(){i?(i=!1,await a.pause(),o()):(i=!0,s())}[a]=Array.from(t),o(),e.forEach(((e,n)=>{e.addEventListener("click",(()=>{t.forEach((async e=>{await e.pause(),e.currentTime=0,i=!1})),o(),a=t[n],s()}))})),n.addEventListener("click",r),window.addEventListener("keydown",(e=>{"Space"===e.code&&r()}))};function Oe(e,t){return function(){return e.apply(t,arguments)}}const{toString:Be}=Object.prototype,{getPrototypeOf:Pe}=Object,Re=(Ne=Object.create(null),e=>{const t=Be.call(e);return Ne[t]||(Ne[t]=t.slice(8,-1).toLowerCase())});var Ne;const Ie=e=>(e=e.toLowerCase(),t=>Re(t)===e),Me=e=>t=>typeof t===e,{isArray:Fe}=Array,He=Me("undefined"),_e=Ie("ArrayBuffer"),$e=Me("string"),Ue=Me("function"),ze=Me("number"),Je=e=>null!==e&&"object"==typeof e,We=e=>{if("object"!==Re(e))return!1;const t=Pe(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)},Ge=Ie("Date"),Ve=Ie("File"),Ke=Ie("Blob"),Qe=Ie("FileList"),Ye=Ie("URLSearchParams");function Xe(e,t,{allOwnKeys:n=!1}={}){if(null==e)return;let a,i;if("object"!=typeof e&&(e=[e]),Fe(e))for(a=0,i=e.length;a<i;a++)t.call(null,e[a],a,e);else{const i=n?Object.getOwnPropertyNames(e):Object.keys(e),o=i.length;let s;for(a=0;a<o;a++)s=i[a],t.call(null,e[s],s,e)}}function Ze(e,t){t=t.toLowerCase();const n=Object.keys(e);let a,i=n.length;for(;i-- >0;)if(a=n[i],t===a.toLowerCase())return a;return null}const et="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,tt=e=>!He(e)&&e!==et,nt=(at="undefined"!=typeof Uint8Array&&Pe(Uint8Array),e=>at&&e instanceof at);var at;const it=Ie("HTMLFormElement"),ot=(({hasOwnProperty:e})=>(t,n)=>e.call(t,n))(Object.prototype),st=Ie("RegExp"),rt=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),a={};Xe(n,((n,i)=>{let o;!1!==(o=t(n,i,e))&&(a[i]=o||n)})),Object.defineProperties(e,a)},ct="abcdefghijklmnopqrstuvwxyz",lt="0123456789",dt={DIGIT:lt,ALPHA:ct,ALPHA_DIGIT:ct+ct.toUpperCase()+lt},ut=Ie("AsyncFunction"),pt={isArray:Fe,isArrayBuffer:_e,isBuffer:function(e){return null!==e&&!He(e)&&null!==e.constructor&&!He(e.constructor)&&Ue(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&("function"==typeof FormData&&e instanceof FormData||Ue(e.append)&&("formdata"===(t=Re(e))||"object"===t&&Ue(e.toString)&&"[object FormData]"===e.toString()))},isArrayBufferView:function(e){let t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&_e(e.buffer),t},isString:$e,isNumber:ze,isBoolean:e=>!0===e||!1===e,isObject:Je,isPlainObject:We,isUndefined:He,isDate:Ge,isFile:Ve,isBlob:Ke,isRegExp:st,isFunction:Ue,isStream:e=>Je(e)&&Ue(e.pipe),isURLSearchParams:Ye,isTypedArray:nt,isFileList:Qe,forEach:Xe,merge:function e(){const{caseless:t}=tt(this)&&this||{},n={},a=(a,i)=>{const o=t&&Ze(n,i)||i;We(n[o])&&We(a)?n[o]=e(n[o],a):We(a)?n[o]=e({},a):Fe(a)?n[o]=a.slice():n[o]=a};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&Xe(arguments[e],a);return n},extend:(e,t,n,{allOwnKeys:a}={})=>(Xe(t,((t,a)=>{n&&Ue(t)?e[a]=Oe(t,n):e[a]=t}),{allOwnKeys:a}),e),trim:e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,n,a)=>{e.prototype=Object.create(t.prototype,a),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},toFlatObject:(e,t,n,a)=>{let i,o,s;const r={};if(t=t||{},null==e)return t;do{for(i=Object.getOwnPropertyNames(e),o=i.length;o-- >0;)s=i[o],a&&!a(s,e,t)||r[s]||(t[s]=e[s],r[s]=!0);e=!1!==n&&Pe(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:Re,kindOfTest:Ie,endsWith:(e,t,n)=>{e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;const a=e.indexOf(t,n);return-1!==a&&a===n},toArray:e=>{if(!e)return null;if(Fe(e))return e;let t=e.length;if(!ze(t))return null;const n=new Array(t);for(;t-- >0;)n[t]=e[t];return n},forEachEntry:(e,t)=>{const n=(e&&e[Symbol.iterator]).call(e);let a;for(;(a=n.next())&&!a.done;){const n=a.value;t.call(e,n[0],n[1])}},matchAll:(e,t)=>{let n;const a=[];for(;null!==(n=e.exec(t));)a.push(n);return a},isHTMLForm:it,hasOwnProperty:ot,hasOwnProp:ot,reduceDescriptors:rt,freezeMethods:e=>{rt(e,((t,n)=>{if(Ue(e)&&-1!==["arguments","caller","callee"].indexOf(n))return!1;const a=e[n];Ue(a)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")}))}))},toObjectSet:(e,t)=>{const n={},a=e=>{e.forEach((e=>{n[e]=!0}))};return Fe(e)?a(e):a(String(e).split(t)),n},toCamelCase:e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(e,t,n){return t.toUpperCase()+n})),noop:()=>{},toFiniteNumber:(e,t)=>(e=+e,Number.isFinite(e)?e:t),findKey:Ze,global:et,isContextDefined:tt,ALPHABET:dt,generateString:(e=16,t=dt.ALPHA_DIGIT)=>{let n="";const{length:a}=t;for(;e--;)n+=t[Math.random()*a|0];return n},isSpecCompliantForm:function(e){return!!(e&&Ue(e.append)&&"FormData"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),n=(e,a)=>{if(Je(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[a]=e;const i=Fe(e)?[]:{};return Xe(e,((e,t)=>{const o=n(e,a+1);!He(o)&&(i[t]=o)})),t[a]=void 0,i}}return e};return n(e,0)},isAsyncFn:ut,isThenable:e=>e&&(Je(e)||Ue(e))&&Ue(e.then)&&Ue(e.catch)};function mt(e,t,n,a,i){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),a&&(this.request=a),i&&(this.response=i)}pt.inherits(mt,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:pt.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const ft=mt.prototype,ht={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((e=>{ht[e]={value:e}})),Object.defineProperties(mt,ht),Object.defineProperty(ft,"isAxiosError",{value:!0}),mt.from=(e,t,n,a,i,o)=>{const s=Object.create(ft);return pt.toFlatObject(e,s,(function(e){return e!==Error.prototype}),(e=>"isAxiosError"!==e)),mt.call(s,e.message,t,n,a,i),s.cause=e,s.name=e.name,o&&Object.assign(s,o),s};const vt=mt;function gt(e){return pt.isPlainObject(e)||pt.isArray(e)}function yt(e){return pt.endsWith(e,"[]")?e.slice(0,-2):e}function bt(e,t,n){return e?e.concat(t).map((function(e,t){return e=yt(e),!n&&t?"["+e+"]":e})).join(n?".":""):t}const Et=pt.toFlatObject(pt,{},null,(function(e){return/^is[A-Z]/.test(e)})),wt=function(e,t,n){if(!pt.isObject(e))throw new TypeError("target must be an object");t=t||new FormData;const a=(n=pt.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!pt.isUndefined(t[e])}))).metaTokens,i=n.visitor||l,o=n.dots,s=n.indexes,r=(n.Blob||"undefined"!=typeof Blob&&Blob)&&pt.isSpecCompliantForm(t);if(!pt.isFunction(i))throw new TypeError("visitor must be a function");function c(e){if(null===e)return"";if(pt.isDate(e))return e.toISOString();if(!r&&pt.isBlob(e))throw new vt("Blob is not supported. Use a Buffer instead.");return pt.isArrayBuffer(e)||pt.isTypedArray(e)?r&&"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}function l(e,n,i){let r=e;if(e&&!i&&"object"==typeof e)if(pt.endsWith(n,"{}"))n=a?n:n.slice(0,-2),e=JSON.stringify(e);else if(pt.isArray(e)&&function(e){return pt.isArray(e)&&!e.some(gt)}(e)||(pt.isFileList(e)||pt.endsWith(n,"[]"))&&(r=pt.toArray(e)))return n=yt(n),r.forEach((function(e,a){!pt.isUndefined(e)&&null!==e&&t.append(!0===s?bt([n],a,o):null===s?n:n+"[]",c(e))})),!1;return!!gt(e)||(t.append(bt(i,n,o),c(e)),!1)}const d=[],u=Object.assign(Et,{defaultVisitor:l,convertValue:c,isVisitable:gt});if(!pt.isObject(e))throw new TypeError("data must be an object");return function e(n,a){if(!pt.isUndefined(n)){if(-1!==d.indexOf(n))throw Error("Circular reference detected in "+a.join("."));d.push(n),pt.forEach(n,(function(n,o){!0===(!(pt.isUndefined(n)||null===n)&&i.call(t,n,pt.isString(o)?o.trim():o,a,u))&&e(n,a?a.concat(o):[o])})),d.pop()}}(e),t};function xt(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function Lt(e,t){this._pairs=[],e&&wt(e,this,t)}const St=Lt.prototype;St.append=function(e,t){this._pairs.push([e,t])},St.toString=function(e){const t=e?function(t){return e.call(this,t,xt)}:xt;return this._pairs.map((function(e){return t(e[0])+"="+t(e[1])}),"").join("&")};const kt=Lt;function Dt(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Tt(e,t,n){if(!t)return e;const a=n&&n.encode||Dt,i=n&&n.serialize;let o;if(o=i?i(t,n):pt.isURLSearchParams(t)?t.toString():new kt(t,n).toString(a),o){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}const qt=class{constructor(){this.handlers=[]}use(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){pt.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},Ct={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},At={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:kt,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},protocols:["http","https","file","blob","url","data"]},jt="undefined"!=typeof window&&"undefined"!=typeof document,Ot=(Bt="undefined"!=typeof navigator&&navigator.product,jt&&["ReactNative","NativeScript","NS"].indexOf(Bt)<0);var Bt;const Pt="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,Rt={...e,...At},Nt=function(e){function t(e,n,a,i){let o=e[i++];if("__proto__"===o)return!0;const s=Number.isFinite(+o),r=i>=e.length;return o=!o&&pt.isArray(a)?a.length:o,r?(pt.hasOwnProp(a,o)?a[o]=[a[o],n]:a[o]=n,!s):(a[o]&&pt.isObject(a[o])||(a[o]=[]),t(e,n,a[o],i)&&pt.isArray(a[o])&&(a[o]=function(e){const t={},n=Object.keys(e);let a;const i=n.length;let o;for(a=0;a<i;a++)o=n[a],t[o]=e[o];return t}(a[o])),!s)}if(pt.isFormData(e)&&pt.isFunction(e.entries)){const n={};return pt.forEachEntry(e,((e,a)=>{t(function(e){return pt.matchAll(/\w+|\[(\w*)]/g,e).map((e=>"[]"===e[0]?"":e[1]||e[0]))}(e),a,n,0)})),n}return null},It={transitional:Ct,adapter:["xhr","http"],transformRequest:[function(e,t){const n=t.getContentType()||"",a=n.indexOf("application/json")>-1,i=pt.isObject(e);if(i&&pt.isHTMLForm(e)&&(e=new FormData(e)),pt.isFormData(e))return a&&a?JSON.stringify(Nt(e)):e;if(pt.isArrayBuffer(e)||pt.isBuffer(e)||pt.isStream(e)||pt.isFile(e)||pt.isBlob(e))return e;if(pt.isArrayBufferView(e))return e.buffer;if(pt.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let o;if(i){if(n.indexOf("application/x-www-form-urlencoded")>-1)return function(e,t){return wt(e,new Rt.classes.URLSearchParams,Object.assign({visitor:function(e,t,n,a){return Rt.isNode&&pt.isBuffer(e)?(this.append(t,e.toString("base64")),!1):a.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((o=pt.isFileList(e))||n.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return wt(o?{"files[]":e}:e,t&&new t,this.formSerializer)}}return i||a?(t.setContentType("application/json",!1),function(e,t,n){if(pt.isString(e))try{return(0,JSON.parse)(e),pt.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||It.transitional,n=t&&t.forcedJSONParsing,a="json"===this.responseType;if(e&&pt.isString(e)&&(n&&!this.responseType||a)){const n=!(t&&t.silentJSONParsing)&&a;try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw vt.from(e,vt.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Rt.classes.FormData,Blob:Rt.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};pt.forEach(["delete","get","head","post","put","patch"],(e=>{It.headers[e]={}}));const Mt=It,Ft=pt.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ht=Symbol("internals");function _t(e){return e&&String(e).trim().toLowerCase()}function $t(e){return!1===e||null==e?e:pt.isArray(e)?e.map($t):String(e)}function Ut(e,t,n,a,i){return pt.isFunction(a)?a.call(this,t,n):(i&&(t=n),pt.isString(t)?pt.isString(a)?-1!==t.indexOf(a):pt.isRegExp(a)?a.test(t):void 0:void 0)}class zt{constructor(e){e&&this.set(e)}set(e,t,n){const a=this;function i(e,t,n){const i=_t(t);if(!i)throw new Error("header name must be a non-empty string");const o=pt.findKey(a,i);(!o||void 0===a[o]||!0===n||void 0===n&&!1!==a[o])&&(a[o||t]=$t(e))}const o=(e,t)=>pt.forEach(e,((e,n)=>i(e,n,t)));return pt.isPlainObject(e)||e instanceof this.constructor?o(e,t):pt.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim())?o((e=>{const t={};let n,a,i;return e&&e.split("\n").forEach((function(e){i=e.indexOf(":"),n=e.substring(0,i).trim().toLowerCase(),a=e.substring(i+1).trim(),!n||t[n]&&Ft[n]||("set-cookie"===n?t[n]?t[n].push(a):t[n]=[a]:t[n]=t[n]?t[n]+", "+a:a)})),t})(e),t):null!=e&&i(t,e,n),this}get(e,t){if(e=_t(e)){const n=pt.findKey(this,e);if(n){const e=this[n];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let a;for(;a=n.exec(e);)t[a[1]]=a[2];return t}(e);if(pt.isFunction(t))return t.call(this,e,n);if(pt.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=_t(e)){const n=pt.findKey(this,e);return!(!n||void 0===this[n]||t&&!Ut(0,this[n],n,t))}return!1}delete(e,t){const n=this;let a=!1;function i(e){if(e=_t(e)){const i=pt.findKey(n,e);!i||t&&!Ut(0,n[i],i,t)||(delete n[i],a=!0)}}return pt.isArray(e)?e.forEach(i):i(e),a}clear(e){const t=Object.keys(this);let n=t.length,a=!1;for(;n--;){const i=t[n];e&&!Ut(0,this[i],i,e,!0)||(delete this[i],a=!0)}return a}normalize(e){const t=this,n={};return pt.forEach(this,((a,i)=>{const o=pt.findKey(n,i);if(o)return t[o]=$t(a),void delete t[i];const s=e?function(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((e,t,n)=>t.toUpperCase()+n))}(i):String(i).trim();s!==i&&delete t[i],t[s]=$t(a),n[s]=!0})),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return pt.forEach(this,((n,a)=>{null!=n&&!1!==n&&(t[a]=e&&pt.isArray(n)?n.join(", "):n)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([e,t])=>e+": "+t)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const n=new this(e);return t.forEach((e=>n.set(e))),n}static accessor(e){const t=(this[Ht]=this[Ht]={accessors:{}}).accessors,n=this.prototype;function a(e){const a=_t(e);t[a]||(function(e,t){const n=pt.toCamelCase(" "+t);["get","set","has"].forEach((a=>{Object.defineProperty(e,a+n,{value:function(e,n,i){return this[a].call(this,t,e,n,i)},configurable:!0})}))}(n,e),t[a]=!0)}return pt.isArray(e)?e.forEach(a):a(e),this}}zt.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),pt.reduceDescriptors(zt.prototype,(({value:e},t)=>{let n=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(e){this[n]=e}}})),pt.freezeMethods(zt);const Jt=zt;function Wt(e,t){const n=this||Mt,a=t||n,i=Jt.from(a.headers);let o=a.data;return pt.forEach(e,(function(e){o=e.call(n,o,i.normalize(),t?t.status:void 0)})),i.normalize(),o}function Gt(e){return!(!e||!e.__CANCEL__)}function Vt(e,t,n){vt.call(this,null==e?"canceled":e,vt.ERR_CANCELED,t,n),this.name="CanceledError"}pt.inherits(Vt,vt,{__CANCEL__:!0});const Kt=Vt,Qt=Rt.hasStandardBrowserEnv?{write(e,t,n,a,i,o){const s=[e+"="+encodeURIComponent(t)];pt.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),pt.isString(a)&&s.push("path="+a),pt.isString(i)&&s.push("domain="+i),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function Yt(e,t){return e&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)?function(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}(e,t):t}const Xt=Rt.hasStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let n;function a(n){let a=n;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=a(window.location.href),function(e){const t=pt.isString(e)?a(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0};function Zt(e,t){let n=0;const a=function(e,t){e=e||10;const n=new Array(e),a=new Array(e);let i,o=0,s=0;return t=void 0!==t?t:1e3,function(r){const c=Date.now(),l=a[s];i||(i=c),n[o]=r,a[o]=c;let d=s,u=0;for(;d!==o;)u+=n[d++],d%=e;if(o=(o+1)%e,o===s&&(s=(s+1)%e),c-i<t)return;const p=l&&c-l;return p?Math.round(1e3*u/p):void 0}}(50,250);return i=>{const o=i.loaded,s=i.lengthComputable?i.total:void 0,r=o-n,c=a(r);n=o;const l={loaded:o,total:s,progress:s?o/s:void 0,bytes:r,rate:c||void 0,estimated:c&&s&&o<=s?(s-o)/c:void 0,event:i};l[t?"download":"upload"]=!0,e(l)}}const en="undefined"!=typeof XMLHttpRequest&&function(e){return new Promise((function(t,n){let a=e.data;const i=Jt.from(e.headers).normalize();let o,s,{responseType:r,withXSRFToken:c}=e;function l(){e.cancelToken&&e.cancelToken.unsubscribe(o),e.signal&&e.signal.removeEventListener("abort",o)}if(pt.isFormData(a))if(Rt.hasStandardBrowserEnv||Rt.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if(!1!==(s=i.getContentType())){const[e,...t]=s?s.split(";").map((e=>e.trim())).filter(Boolean):[];i.setContentType([e||"multipart/form-data",...t].join("; "))}let d=new XMLHttpRequest;if(e.auth){const t=e.auth.username||"",n=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";i.set("Authorization","Basic "+btoa(t+":"+n))}const u=Yt(e.baseURL,e.url);function p(){if(!d)return;const a=Jt.from("getAllResponseHeaders"in d&&d.getAllResponseHeaders());!function(e,t,n){const a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(new vt("Request failed with status code "+n.status,[vt.ERR_BAD_REQUEST,vt.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}((function(e){t(e),l()}),(function(e){n(e),l()}),{data:r&&"text"!==r&&"json"!==r?d.response:d.responseText,status:d.status,statusText:d.statusText,headers:a,config:e,request:d}),d=null}if(d.open(e.method.toUpperCase(),Tt(u,e.params,e.paramsSerializer),!0),d.timeout=e.timeout,"onloadend"in d?d.onloadend=p:d.onreadystatechange=function(){d&&4===d.readyState&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))&&setTimeout(p)},d.onabort=function(){d&&(n(new vt("Request aborted",vt.ECONNABORTED,e,d)),d=null)},d.onerror=function(){n(new vt("Network Error",vt.ERR_NETWORK,e,d)),d=null},d.ontimeout=function(){let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const a=e.transitional||Ct;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new vt(t,a.clarifyTimeoutError?vt.ETIMEDOUT:vt.ECONNABORTED,e,d)),d=null},Rt.hasStandardBrowserEnv&&(c&&pt.isFunction(c)&&(c=c(e)),c||!1!==c&&Xt(u))){const t=e.xsrfHeaderName&&e.xsrfCookieName&&Qt.read(e.xsrfCookieName);t&&i.set(e.xsrfHeaderName,t)}void 0===a&&i.setContentType(null),"setRequestHeader"in d&&pt.forEach(i.toJSON(),(function(e,t){d.setRequestHeader(t,e)})),pt.isUndefined(e.withCredentials)||(d.withCredentials=!!e.withCredentials),r&&"json"!==r&&(d.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&d.addEventListener("progress",Zt(e.onDownloadProgress,!0)),"function"==typeof e.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",Zt(e.onUploadProgress)),(e.cancelToken||e.signal)&&(o=t=>{d&&(n(!t||t.type?new Kt(null,e,d):t),d.abort(),d=null)},e.cancelToken&&e.cancelToken.subscribe(o),e.signal&&(e.signal.aborted?o():e.signal.addEventListener("abort",o)));const m=function(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}(u);m&&-1===Rt.protocols.indexOf(m)?n(new vt("Unsupported protocol "+m+":",vt.ERR_BAD_REQUEST,e)):d.send(a||null)}))},tn={http:null,xhr:en};pt.forEach(tn,((e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(e){}Object.defineProperty(e,"adapterName",{value:t})}}));const nn=e=>`- ${e}`,an=e=>pt.isFunction(e)||null===e||!1===e,on=e=>{e=pt.isArray(e)?e:[e];const{length:t}=e;let n,a;const i={};for(let o=0;o<t;o++){let t;if(n=e[o],a=n,!an(n)&&(a=tn[(t=String(n)).toLowerCase()],void 0===a))throw new vt(`Unknown adapter '${t}'`);if(a)break;i[t||"#"+o]=a}if(!a){const e=Object.entries(i).map((([e,t])=>`adapter ${e} `+(!1===t?"is not supported by the environment":"is not available in the build")));let n=t?e.length>1?"since :\n"+e.map(nn).join("\n"):" "+nn(e[0]):"as no adapter specified";throw new vt("There is no suitable adapter to dispatch the request "+n,"ERR_NOT_SUPPORT")}return a};function sn(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Kt(null,e)}function rn(e){return sn(e),e.headers=Jt.from(e.headers),e.data=Wt.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1),on(e.adapter||Mt.adapter)(e).then((function(t){return sn(e),t.data=Wt.call(e,e.transformResponse,t),t.headers=Jt.from(t.headers),t}),(function(t){return Gt(t)||(sn(e),t&&t.response&&(t.response.data=Wt.call(e,e.transformResponse,t.response),t.response.headers=Jt.from(t.response.headers))),Promise.reject(t)}))}const cn=e=>e instanceof Jt?e.toJSON():e;function ln(e,t){t=t||{};const n={};function a(e,t,n){return pt.isPlainObject(e)&&pt.isPlainObject(t)?pt.merge.call({caseless:n},e,t):pt.isPlainObject(t)?pt.merge({},t):pt.isArray(t)?t.slice():t}function i(e,t,n){return pt.isUndefined(t)?pt.isUndefined(e)?void 0:a(void 0,e,n):a(e,t,n)}function o(e,t){if(!pt.isUndefined(t))return a(void 0,t)}function s(e,t){return pt.isUndefined(t)?pt.isUndefined(e)?void 0:a(void 0,e):a(void 0,t)}function r(n,i,o){return o in t?a(n,i):o in e?a(void 0,n):void 0}const c={url:o,method:o,data:o,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,withXSRFToken:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:r,headers:(e,t)=>i(cn(e),cn(t),!0)};return pt.forEach(Object.keys(Object.assign({},e,t)),(function(a){const o=c[a]||i,s=o(e[a],t[a],a);pt.isUndefined(s)&&o!==r||(n[a]=s)})),n}const dn={};["object","boolean","number","function","string","symbol"].forEach(((e,t)=>{dn[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));const un={};dn.transitional=function(e,t,n){function a(e,t){return"[Axios v1.6.5] Transitional option '"+e+"'"+t+(n?". "+n:"")}return(n,i,o)=>{if(!1===e)throw new vt(a(i," has been removed"+(t?" in "+t:"")),vt.ERR_DEPRECATED);return t&&!un[i]&&(un[i]=!0,console.warn(a(i," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,i,o)}};const pn={assertOptions:function(e,t,n){if("object"!=typeof e)throw new vt("options must be an object",vt.ERR_BAD_OPTION_VALUE);const a=Object.keys(e);let i=a.length;for(;i-- >0;){const o=a[i],s=t[o];if(s){const t=e[o],n=void 0===t||s(t,o,e);if(!0!==n)throw new vt("option "+o+" must be "+n,vt.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new vt("Unknown option "+o,vt.ERR_BAD_OPTION)}},validators:dn},mn=pn.validators;class fn{constructor(e){this.defaults=e,this.interceptors={request:new qt,response:new qt}}request(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},t=ln(this.defaults,t);const{transitional:n,paramsSerializer:a,headers:i}=t;void 0!==n&&pn.assertOptions(n,{silentJSONParsing:mn.transitional(mn.boolean),forcedJSONParsing:mn.transitional(mn.boolean),clarifyTimeoutError:mn.transitional(mn.boolean)},!1),null!=a&&(pt.isFunction(a)?t.paramsSerializer={serialize:a}:pn.assertOptions(a,{encode:mn.function,serialize:mn.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let o=i&&pt.merge(i.common,i[t.method]);i&&pt.forEach(["delete","get","head","post","put","patch","common"],(e=>{delete i[e]})),t.headers=Jt.concat(o,i);const s=[];let r=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(r=r&&e.synchronous,s.unshift(e.fulfilled,e.rejected))}));const c=[];let l;this.interceptors.response.forEach((function(e){c.push(e.fulfilled,e.rejected)}));let d,u=0;if(!r){const e=[rn.bind(this),void 0];for(e.unshift.apply(e,s),e.push.apply(e,c),d=e.length,l=Promise.resolve(t);u<d;)l=l.then(e[u++],e[u++]);return l}d=s.length;let p=t;for(u=0;u<d;){const e=s[u++],t=s[u++];try{p=e(p)}catch(e){t.call(this,e);break}}try{l=rn.call(this,p)}catch(e){return Promise.reject(e)}for(u=0,d=c.length;u<d;)l=l.then(c[u++],c[u++]);return l}getUri(e){return Tt(Yt((e=ln(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}pt.forEach(["delete","get","head","options"],(function(e){fn.prototype[e]=function(t,n){return this.request(ln(n||{},{method:e,url:t,data:(n||{}).data}))}})),pt.forEach(["post","put","patch"],(function(e){function t(t){return function(n,a,i){return this.request(ln(i||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:a}))}}fn.prototype[e]=t(),fn.prototype[e+"Form"]=t(!0)}));const hn=fn;class vn{constructor(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise((function(e){t=e}));const n=this;this.promise.then((e=>{if(!n._listeners)return;let t=n._listeners.length;for(;t-- >0;)n._listeners[t](e);n._listeners=null})),this.promise.then=e=>{let t;const a=new Promise((e=>{n.subscribe(e),t=e})).then(e);return a.cancel=function(){n.unsubscribe(t)},a},e((function(e,a,i){n.reason||(n.reason=new Kt(e,a,i),t(n.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;return{token:new vn((function(t){e=t})),cancel:e}}}const gn=vn,yn={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(yn).forEach((([e,t])=>{yn[t]=e}));const bn=yn,En=function e(t){const n=new hn(t),a=Oe(hn.prototype.request,n);return pt.extend(a,hn.prototype,n,{allOwnKeys:!0}),pt.extend(a,n,null,{allOwnKeys:!0}),a.create=function(n){return e(ln(t,n))},a}(Mt);En.Axios=hn,En.CanceledError=Kt,En.CancelToken=gn,En.isCancel=Gt,En.VERSION="1.6.5",En.toFormData=wt,En.AxiosError=vt,En.Cancel=En.CanceledError,En.all=function(e){return Promise.all(e)},En.spread=function(e){return function(t){return e.apply(null,t)}},En.isAxiosError=function(e){return pt.isObject(e)&&!0===e.isAxiosError},En.mergeConfig=ln,En.AxiosHeaders=Jt,En.formToJSON=e=>Nt(pt.isHTMLForm(e)?new FormData(e):e),En.getAdapter=on,En.HttpStatusCode=bn,En.default=En;const wn=En,xn=()=>{xe(10);const e=document.getElementById("joke"),t=document.getElementById("jokeBtn");async function n(){const t={headers:{Accept:"application/json"}};try{const n=await wn.get("https://icanhazdadjoke.com/",t),{data:a}=n;e.textContent=a.joke}catch(e){console.error("請求笑話時出現錯誤:",e)}}n(),t.addEventListener("click",n)},Ln=()=>{xe(11);const e=document.getElementById("insert");window.addEventListener("keydown",(t=>{e.innerHTML=`\n    <div class="key">\n       ${" "===t.key?"Space":t.key} \n        <small>event.key</small>\n    </div>\n    <div class="key">\n        ${t.keyCode}\n        <small>event.keyCode(淘汰)</small>\n    </div>\n    <div class="key">\n        ${t.code}\n        <small>event.code</small>\n    </div>    \n    `}))},Sn=()=>{xe(12),document.querySelectorAll(".faq-toggle").forEach((e=>{e.addEventListener("click",(()=>{e.parentNode.classList.toggle("active")}))}))},kn=()=>{xe(13);const e=document.getElementById("tags"),t=document.getElementById("textarea"),n=document.querySelector(".btn");function a(t){const n=t.split(",").filter((e=>""!==e.trim())).map((e=>e.trim()));e.innerHTML="",n.forEach((t=>{const n=document.createElement("span");n.classList.add("tag"),n.innerText=t,e.appendChild(n)}))}t.focus(),t.addEventListener("keyup",(e=>{a(e.target.value)})),n.addEventListener("click",(()=>{setTimeout((()=>{t.value=""}),50),function(){function e(e){e.classList.add("highlight")}function n(){const e=document.querySelectorAll(".tag");return e[Math.floor(Math.random()*e.length)]}const i=document.querySelector(".sampleName"),o=document.querySelector(".sampleLocation"),s=document.querySelector(".sampleFood");i.addEventListener("click",(()=>{const e="Alice, Bruce, Claire, David, Elliot,Frank, Grace, \n    Hannah,Ivy,Jason, Kevin, Lily, Mike, Nick,\n    Olivia, Paul, Queena,Rachel, Sarah, Tyler,Uma,\n    Victor, William, Xenia, Yvonne ,Zoey";t.value=e,a(e)})),o.addEventListener("click",(()=>{const e="基隆市,台北市,新北市,桃園市,新竹縣,新竹市,苗栗縣,台中市,彰化縣,南投縣,雲林縣,嘉義縣,嘉義市,台南市,高雄市,屏東縣,宜蘭縣,花蓮縣,台東縣,澎湖縣,連江縣,金門縣";t.value=e,a(e)})),s.addEventListener("click",(()=>{const e="鹽酥雞,珍珠奶茶,肉圓,蚵仔煎,筒仔米糕,鳳梨酥,牛肉麵,阿給,滷肉飯,豆花,筒仔米糕,蔥油餅,燒餅油條,豬血糕,蜜餞,蘿蔔糕,椪餅,甜不辣,紅豆餅,杏仁茶,";t.value=e,a(e)}));const r=setInterval((()=>{const t=n();e(t),setTimeout((()=>{t.classList.remove("highlight")}),100)}),100);setTimeout((()=>{clearInterval(r),setTimeout((()=>{e(n())}))}),3e3)}()}));const i=document.querySelector(".sampleName"),o=document.querySelector(".sampleLocation"),s=document.querySelector(".sampleFood");i.addEventListener("click",(()=>{const e="Alice, Bruce, Claire, David, Elliot,Frank, Grace, \n    Hannah,Ivy,Jason, Kevin, Lily, Mike, Nick,\n    Olivia, Paul, Queena,Rachel, Sarah, Tyler,Uma,\n    Victor, William, Xenia, Yvonne ,Zoey";t.value=e,a(e)})),o.addEventListener("click",(()=>{const e="基隆市,台北市,新北市,桃園市,新竹縣,新竹市,苗栗縣,台中市,彰化縣,南投縣,雲林縣,嘉義縣,嘉義市,台南市,高雄市,屏東縣,宜蘭縣,花蓮縣,台東縣,澎湖縣,連江縣,金門縣";t.value=e,a(e)})),s.addEventListener("click",(()=>{const e="鹽酥雞,珍珠奶茶,肉圓,蚵仔煎,筒仔米糕,鳳梨酥,牛肉麵,阿給,滷肉飯,豆花,筒仔米糕,蔥油餅,燒餅油條,豬血糕,蜜餞,蘿蔔糕,椪餅,甜不辣,紅豆餅,杏仁茶,";t.value=e,a(e)}))},Dn=()=>{xe(14);const e=document.getElementById("toggle"),t=document.getElementById("nav");e.addEventListener("click",(()=>t.classList.toggle("active")))},Tn=()=>{xe(15),document.querySelectorAll(".counter").forEach((e=>{e.innerText="0";const t=()=>{const n=+e.getAttribute("data-target"),a=+e.innerText,i=n/200;a<n?(e.innerText=`${Math.ceil(a+i)}`,setTimeout(t,1)):e.innerText=n};t()}))},qn=()=>{xe(16);const e=document.getElementById("remained"),t=document.getElementById("liters"),n=document.getElementById("percentage"),a=document.querySelectorAll(".cup-small");function i(){const i=document.querySelectorAll(".cup-small.full").length,o=a.length;0===i?(n.style.visibility="hidden",n.style.height=0):(n.style.visibility="visible",n.style.height=i/o*330+"px",n.innerText=i/o*100+"%"),i===o?(e.style.visibility="hidden",e.style.height=0):(e.style.visibility="visible",t.innerText=2*(1-i/o)+"L")}i(),a.forEach(((e,t)=>{e.addEventListener("click",(()=>{!function(e){a[e].classList.contains("full")&&(e!==a.length-1&&a[e].nextElementSibling.classList.contains("full")||(e-=1)),a.forEach(((t,n)=>{n<=e?t.classList.add("full"):t.classList.remove("full")}))}(t),i()}))}))},Cn=()=>{xe(17);const e="c3c2d9ae238383f2129b4e9b63d11953",t=`https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${e}&page=1&language=zh-TW`,n=`https://api.themoviedb.org/3/search/movie?api_key=${e}&query="`,a=document.getElementById("main"),i=document.getElementById("form"),o=document.getElementById("search");async function s(e){const t=await fetch(e),n=await t.json();var i;console.log(n.results),i=n.results,a.innerHTML="",i.forEach((e=>{const{title:t,poster_path:n,vote_average:i,overview:o}=e,s=document.createElement("div");var r;s.classList.add("movie"),s.innerHTML=`\n            <img src="${"https://image.tmdb.org/t/p/w1280"+n}"\n                alt="${t}">\n            <div class="movie-info">\n                <h3>${t}</h3>\n                <span class="${r=i,r>=8?"green":r>=5?"orange":"red"}">${i}</span>\n            </div>\n            <div class="overview">\n                <h3>劇情簡介</h3>\n                ${o}\n            </div>`,a.appendChild(s)}))}s(t),i.addEventListener("submit",(e=>{e.preventDefault();const t=o.value;t&&""!==t?(s(`${n+t}&language=zh-TW`),o.value=""):window.location.reload()}))},An=()=>{xe(18);const e=document.querySelector("#day18"),t=document.querySelectorAll(".slide"),n=document.getElementById("left"),a=document.getElementById("right");let i=0;function o(){e.style.backgroundImage=t[i].style.backgroundImage}function s(){t.forEach((e=>e.classList.remove("active"))),t[i].classList.add("active")}a.addEventListener("click",(()=>{i+=1,i>t.length-1&&(i=0),o(),s()})),n.addEventListener("click",(()=>{i-=1,i<0&&(i=t.length-1),o(),s()}))},jn=()=>{xe(19);const e=document.querySelector(".hour"),t=document.querySelector(".minute"),n=document.querySelector(".second"),a=document.querySelector(".time"),i=document.querySelector(".date"),o=document.querySelector(".toggle"),s=["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],r=["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"];o.addEventListener("click",(e=>{const t=document.querySelector("html");t.classList.contains("dark")?(t.classList.remove("dark"),e.target.innerHTML="切換暗色主題"):(t.classList.add("dark"),e.target.innerHTML="切換明亮主題")}));const c=(e,t,n,a,i)=>(e-t)*(i-a)/(n-t)+a;function l(){const o=new Date,l=o.getMonth(),d=o.getDay(),u=o.getDate(),p=o.getHours(),m=p>=13?p%12:p,f=o.getMinutes(),h=o.getSeconds(),v=p>=12?"PM":"AM";e.style.transform=`translate(-50%, -100%) rotate(${c(m,0,12,0,360)}deg)`,t.style.transform=`translate(-50%, -100%) rotate(${c(f,0,60,0,360)}deg)`,n.style.transform=`translate(-50%, -100%) rotate(${c(h,0,60,0,360)}deg)`,a.innerHTML=`${m}:${f<10?`0${f}`:f} ${v}`,i.innerHTML=` ${r[l]} <span class="">${u}</span>日, ${s[d]}`}l(),setInterval(l,1e3)},On=()=>{xe(20);const e=document.querySelectorAll(".ripple");console.log(e),e.forEach((e=>{e.addEventListener("click",(t=>{const n=t.clientX,a=t.clientY,i=t.target.offsetTop,o=n-t.target.offsetLeft,s=a-i,r=document.createElement("span");r.classList.add("circle"),r.style.top=`${s}px`,r.style.left=`${o}px`,e.appendChild(r),setTimeout((()=>r.remove()),500)}))}))},Bn=()=>{xe(21);const e=document.querySelector(".fill"),t=document.querySelectorAll(".empty");function n(e){e.preventDefault(),console.log("dragOver")}function a(e){e.preventDefault(),console.log("dragEnter"),this.className+=" hovered"}function i(){console.log("dragLeave"),this.className="empty"}function o(){console.log("dragDrop"),this.className="empty",this.append(e)}e.addEventListener("dragstart",(function(){console.log("dragStart"),this.className+=" hold",setTimeout((()=>{this.className=""}),0)})),e.addEventListener("dragend",(function(){console.log("dragEnd"),this.className="fill"}));for(const e of t)e.addEventListener("dragover",n),e.addEventListener("dragenter",a),e.addEventListener("dragleave",i),e.addEventListener("drop",o)},Pn=()=>{xe(22);const e=document.getElementById("increase"),t=document.getElementById("decrease"),n=document.getElementById("size"),a=document.getElementById("color"),i=document.getElementById("eraser"),o=document.getElementById("clear"),s=document.getElementById("canvas"),r=s.getContext("2d");let c,l,d=!1,u=!1,p=5,m="#333333",f=m;a.value=m,s.addEventListener("mousedown",(e=>{d=!0,c=e.offsetX,l=e.offsetY})),document.addEventListener("mouseup",(()=>{d=!1,c=void 0,l=void 0})),s.addEventListener("mousemove",(e=>{if(d){const a=e.offsetX,i=e.offsetY;t=a,n=i,r.beginPath(),r.fillStyle=f,r.arc(t,n,p,0,2*Math.PI),r.fill(),function(e,t,n,a){r.beginPath(),r.strokeStyle=f,r.lineWidth=2*p,r.moveTo(e,t),r.lineTo(n,a),r.stroke()}(c,l,a,i),c=a,l=i}var t,n})),e.addEventListener("click",(()=>{p+=5,p>50&&(p=50),n.innerText=p})),t.addEventListener("click",(()=>{p-=5,p<5&&(p=5),n.innerText=p})),a.addEventListener("change",(e=>{i.classList.remove("active"),u=!1,m=e.target.value,f=m})),o.addEventListener("click",(()=>r.clearRect(0,0,s.width,s.height))),i.addEventListener("click",(()=>{if(u)i.classList.remove("active"),u=!1,f=m;else{i.classList.add("active"),u=!0;const e=getComputedStyle(s).backgroundColor;f=e}}))},Rn=()=>{xe(23)},Nn=()=>{xe(24);const e=document.getElementById("day24Header"),t=document.getElementById("day24Title"),n=document.getElementById("day24Excerpt"),a=document.getElementById("day24Profile_img"),i=document.getElementById("day24Name"),o=document.getElementById("day24Date"),s=document.querySelectorAll(".animated-bg"),r=document.querySelectorAll(".animated-bg-text");setTimeout((function(){e.innerHTML='<img src="https://images.unsplash.com/photo-1697441642505-0f4ce8fbe98a?auto=format&fit=crop&q=80&w=2070&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" alt="Shibuya, Tokyo, Japan">',t.innerHTML="Lorem ipsum dolor sit amet",n.innerHTML="Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore perferendis",a.innerHTML='<img src="https://randomuser.me/api/portraits/men/11.jpg" alt="">',i.innerHTML="John Doe",o.innerHTML="Oct 08, 2020",s.forEach((e=>e.classList.remove("animated-bg"))),r.forEach((e=>e.classList.remove("animated-bg-text")))}),2500)},In=()=>{xe(25);const e=document.querySelector("header");window.addEventListener("scroll",(function(){window.scrollY>e.offsetHeight+150?e.classList.add("active"):e.classList.remove("active")}))},Mn=()=>{xe(26);const e=document.querySelector(".slider-container"),t=document.querySelector(".right-slide"),n=document.querySelector(".left-slide"),a=document.querySelector(".up-button"),i=document.querySelector(".down-button"),o=t.querySelectorAll("div").length;n.style.top=`-${100*(o-1)}vh`;let s=0;const r=a=>{const i=e.clientHeight;"up"===a?(s+=1,s>o-1&&(s=0)):"down"===a&&(s-=1,s<0&&(s=o-1)),n.style.transform=`translateY(${s*i}px)`,t.style.transform=`translateY(-${s*i}px)`};a.addEventListener("click",(()=>r("up"))),i.addEventListener("click",(()=>r("down")))},Fn=()=>{xe(27);const e=document.getElementById("button"),t=document.getElementById("toasts"),n=["Message One","Message Two","Message Three","Message Four"],a=["info","success","error"];e.addEventListener("click",(()=>function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const o=document.createElement("div");o.classList.add("toast"),o.classList.add(i||a[Math.floor(Math.random()*a.length)]),o.innerText=e||n[Math.floor(Math.random()*n.length)],t.appendChild(o),setTimeout((()=>{o.remove()}),3e3)}()))},Hn=()=>{xe(28);const e=document.getElementById("main"),t=document.querySelector("#form"),n=document.querySelector("#search"),a="https://api.github.com/users/";function i(t){const n=`\n        <div class="card">\n            <h1>${t}</h1>\n        </div>\n    `;e.innerHTML=n}async function o(t){try{const{data:n}=await wn.get(a+t);!function(t){const n=`\n    <div class="card">\n        <div class="imgwrap">\n            <img src="${t.avatar_url}" alt="${t.name}" class="avatar">\n        </div>\n        <div class="user-info">\n            <h2>${t.name}</h2>\n            <p>${t.bio}</p>\n            <ul>\n                <li>${t.followers} <strong>Followers</strong></li>\n                <li>${t.following} <strong>Following</strong></li>\n                <li>${t.public_repos} <strong>Repos</strong></li>\n            </ul>\n            <div id="repos"></div>\n        </div>\n    </div>   \n    `;e.innerHTML=n}(n),async function(e){try{const{data:t}=await wn(`${a+e}/repos?sort=created`);!function(e){const t=document.getElementById("repos");e.slice(0,5).forEach((e=>{const n=document.createElement("a");n.classList.add("repo"),n.href=e.html_url,n.target="_blank",n.innerText=e.name,t.appendChild(n)}))}(t)}catch(e){i("取得儲存庫時出現問題")}}(t)}catch(e){console.log(e.response),404===e.response.status&&i("查無該用戶")}}t.addEventListener("submit",(e=>{e.preventDefault();const t=n.value;t&&(o(t),n.value="")}))},_n=()=>{xe(29);const e=document.querySelector(".loveMe"),t=document.querySelector("#times");let n=0,a=0;e.addEventListener("click",(i=>{0===n?n=(new Date).getTime():(new Date).getTime()-n<800?((n=>{const i=document.createElement("i");i.classList.add("fas"),i.classList.add("fa-heart");const o=n.clientX,s=n.clientY,r=o-n.target.offsetLeft,c=s-n.target.offsetTop;i.style.top=`${c}px`,i.style.left=`${r}px`,e.appendChild(i),t.innerHTML=++a,setTimeout((()=>i.remove()),1e3)})(i),n=0):n=(new Date).getTime()}))},$n=()=>{xe(30);const e=document.querySelector("#result"),t=document.querySelector("#text"),n=document.querySelector("#speed"),a=document.querySelector("#submit");let i="Hello(^ρ^)/",o=500/n.value,s=1;function r(){e.innerHTML=i.slice(0,s),s+=1,s<=i.length?setTimeout(r,o):s>i.length&&(s=1)}t.focus(),r(),a.addEventListener("click",(()=>{""!==t.value&&(i=t.value),o=300/n.value,r()}))},Un=()=>{xe(31);const e=document.getElementById("result"),t=document.getElementById("length"),n=document.getElementById("uppercase"),a=document.getElementById("lowercase"),i=document.getElementById("numbers"),o=document.getElementById("symbols"),s=document.getElementById("generate");document.getElementById("clipboard").addEventListener("click",(async()=>{const t=e.innerText;if(t)try{await navigator.clipboard.writeText(t),alert("密碼已複製到剪貼板")}catch(e){console.error("複製到剪貼板時出現錯誤：",e)}})),s.addEventListener("click",(()=>{const s=+t.value,r=a.checked,c=n.checked,l=i.checked,d=o.checked;e.innerText=function(e,t,n,a,i){let o="";const s=e+t+n+a,r=[{lower:e},{upper:t},{number:n},{symbol:a}].filter((e=>Object.values(e)[0]));if(0===s)return"";const c={lower:function(){return String.fromCharCode(Math.floor(26*Math.random())+97)},upper:function(){return String.fromCharCode(Math.floor(26*Math.random())+65)},number:function(){return String.fromCharCode(Math.floor(10*Math.random())+48)},symbol:function(){return"!@#$%^&*(){}[]=<>/,."[Math.floor(20*Math.random())]}};for(let e=0;e<i;e+=s)r.forEach((e=>{const t=Object.keys(e)[0];o+=c[t]()}));return o.slice(0,i)}(r,c,l,d,s)}))},zn=()=>{xe(32);const e=document.querySelectorAll(".toggle"),t=document.querySelector("#tainan"),n=document.querySelector("#kaohsiung"),a=document.querySelector("#pingtung");e.forEach((e=>e.addEventListener("change",(e=>{return i=e.target,void(t.checked&&n.checked&&a.checked&&(t===i&&(a.checked=!1),n===i&&(t.checked=!1),a===i&&(n.checked=!1)));var i}))))},Jn=()=>{xe(33);const e=document.getElementById("add"),t=JSON.parse(localStorage.getItem("notes"));function n(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const t=document.createElement("div");t.classList.add("note"),t.innerHTML=`\n    <div class="tools">\n        <button class="edit"><i class="fas fa-edit"></i></button>\n        <button class="delete"><i class="fas fa-trash-alt"></i></button>\n    </div>\n\n    <div class="main ${e?"":"hidden"}"></div>\n    <textarea class="${e?"hidden":""} "></textarea>\n    `;const n=t.querySelector(".edit"),i=t.querySelector(".delete"),o=t.querySelector(".main"),s=t.querySelector("textarea");s.value=e,o.innerHTML=marked(e),i.addEventListener("click",(()=>{t.remove(),a()})),n.addEventListener("click",(()=>{o.classList.toggle("hidden"),s.classList.toggle("hidden")})),s.addEventListener("input",(e=>{const{value:t}=e.target;o.innerHTML=marked(t),a()})),document.getElementById("day33main").appendChild(t),a()}function a(){const e=document.querySelectorAll("textarea"),t=[];e.forEach((e=>t.push(e.value))),localStorage.setItem("notes",JSON.stringify(t))}t&&t.forEach((e=>n(e))),e.addEventListener("click",(()=>n()))},Wn=()=>{xe(34);const e=document.querySelectorAll(".nums span"),t=document.querySelector(".counter"),n=document.querySelector(".final"),a=document.querySelector("#replay");function i(){e.forEach(((a,i)=>{a.addEventListener("animationend",(o=>{"goIn"===o.animationName&&i!==e.length-1?(a.classList.remove("in"),a.classList.add("out")):"goOut"===o.animationName&&a.nextElementSibling?a.nextElementSibling.classList.add("in"):(t.classList.add("hide"),n.classList.add("show"))}))}))}i(),a.addEventListener("click",(()=>{t.classList.remove("hide"),n.classList.remove("show"),e.forEach((e=>{e.classList.value=""})),e[0].classList.add("in"),i()}))},Gn=()=>{xe(35);const e=document.getElementById("imgs"),t=document.getElementById("left"),n=document.getElementById("right"),a=document.querySelectorAll("#imgs img"),i=400;let o=0;function s(){o>a.length-1?o=0:o<0&&(o=a.length-1),e.style.transform=`translateX(${-o*i}px)`}function r(){o+=1,s()}let c=setInterval(r,2e3);function l(){clearInterval(c),c=setInterval(r,2e3)}o=3,s(),n.addEventListener("click",(()=>{o+=1,s(),l()})),t.addEventListener("click",(()=>{o-=1,s(),l()}))},Vn=()=>{xe(36);const e=document.getElementById("container"),t=["#e74c3c","#8e44ad","#3498db","#e67e22","#2ecc71"];function n(e){const n=t[Math.floor(Math.random()*t.length)];e.style.background=n,e.style.boxShadow=`0 0 2px ${n}, 0 0 10px ${n}`}for(let t=0;t<500;t+=1){const t=document.createElement("div");t.classList.add("square"),t.addEventListener("mouseover",(()=>n(t))),t.addEventListener("mouseout",(()=>{return(e=t).style.background="#252525",void(e.style.boxShadow="0 0 2px #000");var e})),e.appendChild(t)}},Kn=()=>{xe(37);const e=document.getElementById("poke-container"),t={grass:{typeName:"草系",color:"#DEFDE0"},fire:{typeName:"火系",color:"#FDDFDF"},water:{typeName:"水系",color:"#DEF3FD"},bug:{typeName:"昆蟲系",color:"#f8d5a3"},normal:{typeName:"普通系",color:"#F5F5F5"},poison:{typeName:"毒系",color:"#98d7a5"},electric:{typeName:"電系",color:"#FCF7DE"},ground:{typeName:"地面系",color:"#f4e7da"},fairy:{typeName:"妖精系",color:"#fceaff"},fighting:{typeName:"格鬥系",color:"E6E0D4"},psychic:{typeName:"超能力系",color:"#eaeda1"},rock:{typeName:"岩石系",color:"#d5d5d4"},dragon:{typeName:"龍系",color:"#97b3e6"},flying:{typeName:"飛行系",color:"#F5F5F5"}},n=Object.keys(t),a=async a=>{const i=`https://pokeapi.co/api/v2/pokemon/${a}`,o=await fetch(i);(a=>{const i=document.createElement("div");i.classList.add("pokemon");const o=a.name[0].toUpperCase()+a.name.slice(1),s=a.id.toString().padStart(3,"0"),r=a.types.map((e=>e.type.name)),c=n.find((e=>r.indexOf(e)>-1)),{color:l}=t[c];i.style.backgroundColor=l;const d=`\n    <div class="img-container">\n        <img src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${a.id}.png"" alt="${o}">\n    </div>\n    <div class="info">\n        <span class="number">#${s}</span>\n        <h3 class="name">${o}</h3>\n        <small class="type">屬性: <span>${t[c].typeName}</span> </small>\n    </div>\n    `;i.innerHTML=d,e.appendChild(i)})(await o.json())};(async()=>{for(let e=1;e<=150;e+=1)await a(e)})()},Qn=()=>{xe(38);const e=document.querySelectorAll(".content"),t=document.querySelectorAll("nav ul li");t.forEach(((n,a)=>{n.addEventListener("click",(()=>{e.forEach((e=>e.classList.remove("show"))),t.forEach((e=>e.classList.remove("active"))),n.classList.add("active"),e[a].classList.add("show")}))}))},Yn=()=>{xe(39);const e=document.getElementById("password"),t=document.getElementById("background");e.addEventListener("input",(e=>{const n=e.target.value,{length:a}=n,i=20-2*a;t.style.filter=`blur(${i}px)`}))},Xn=()=>{xe(40);const e=document.getElementById("boxes");document.getElementById("btn").addEventListener("click",(()=>e.classList.toggle("big"))),function(){for(let t=0;t<4;t+=1)for(let n=0;n<4;n+=1){const a=document.createElement("div");a.classList.add("box"),a.style.backgroundPosition=`${125*-n}px ${125*-t}px`,e.appendChild(a)}}()},Zn=()=>{xe(41);const e=document.querySelectorAll(".code");e[0].focus(),e.forEach(((t,n)=>{t.addEventListener("keydown",(t=>{t.key>=0&&t.key<=9?(e[n].value="",n!==e.length-1&&setTimeout((()=>e[n+1].focus()),10)):"Backspace"===t.key&&0!==n&&setTimeout((()=>e[n-1].focus()),10)}))}))},ea=()=>{xe(42);const e=document.getElementById("filter"),t=document.getElementById("result"),n=[];!async function(){const{data:e}=await wn.get("https://randomuser.me/api/?results=50&nat=US");console.log(e);const a=e.results;t.innerHTML="",a.forEach((e=>{const a=document.createElement("li");n.push(a),a.innerHTML=`\n        <img src="${e.picture.thumbnail}" alt="${e.name.last+e.name.first}">\n        <div class="user-info">\n            <h4>${e.name.last+e.name.first}</h4>\n            <p>${e.location.state}, ${e.location.country}</p>\n        </div>`,t.appendChild(a)}))}(),e.addEventListener("input",(e=>{return t=e.target.value,void n.forEach((e=>{e.innerText.toLowerCase().includes(t.toLowerCase())?e.classList.remove("hide"):e.classList.add("hide")}));var t}))},ta=()=>{xe(43);const e=document.querySelector("#panel"),t=document.querySelector(".ratings-container"),n=document.querySelectorAll(".rating"),a=document.querySelector("#send");let i="";function o(){for(let e=0;e<n.length;e+=1)n[e].classList.remove("active")}t.addEventListener("click",(e=>{e.target.parentNode.classList.contains("rating")&&e.target.nextElementSibling?(o(),e.target.parentNode.classList.add("active"),i=e.target.nextElementSibling.innerHTML):e.target.parentNode.classList.contains("rating")&&e.target.previousSibling&&"IMG"===e.target.previousElementSibling.nodeName&&(o(),e.target.parentNode.classList.add("active"),i=e.target.innerHTML)})),a.addEventListener("click",(()=>{""===i&&(i="滿意"),e.innerHTML=`\n          <i class="fas fa-heart"></i>\n          <strong>感謝您寶貴的回覆</strong>\n          <br>\n          <strong>回覆: ${i}</strong>\n          <p>我們將利用您的回饋來改善我們的客戶服務品質</p>\n      `}))},na=()=>{xe(44),document.getElementById("range").addEventListener("input",(e=>{const t=+e.target.value,n=e.target.nextElementSibling,a=getComputedStyle(e.target).getPropertyValue("width"),i=getComputedStyle(n).getPropertyValue("width"),o=+a.substring(0,a.length-2),s=+i.substring(0,i.length-2),r=+e.target.max,c=t*(o/r)-s/2+((t-(l=+e.target.min))*(-10-10)/(r-l)+10);var l;n.style.left=`${c}px`,n.innerHTML=t}))},aa=()=>{xe(45);const e=document.querySelector(".open-btn"),t=document.querySelector(".close-btn"),n=document.querySelectorAll(".nav");e.addEventListener("click",(()=>{n.forEach((e=>e.classList.add("visible")))})),t.addEventListener("click",(()=>{n.forEach((e=>e.classList.remove("visible")))}))},ia=()=>{xe(46);const e=[{question:"哪一顆行星是太陽系中最大的行星？",a:"水星",b:"地球",c:"木星",d:"金星",correct:"c"},{question:"哪個大洋被認為是世界上最深的大洋？",a:"大西洋",b:"印度洋",c:"太平洋",d:"北冰洋",correct:"c"},{question:"哪一種動物是唯一能飛的哺乳動物？",a:"燕子",b:"蝙蝠",c:"老鼠",d:"鴨子",correct:"b"},{question:"在哪個國家可以找到埃菲爾鐵塔？",a:"英國",b:"意大利",c:"法國",d:"西班牙",correct:"c"},{question:"哪一位科學家提出了相對論理論？",a:"艾因斯坦",b:"牛頓",c:"達爾文",d:"柯普尼克",correct:"a"},{question:"哪位藝術家以他的太陽花畫作而聞名？",a:"梵谷",b:"達文西",c:"畢加索",d:"華東",correct:"a"}],t=document.getElementById("quiz"),n=document.querySelectorAll(".answer"),a=document.getElementById("quizNum"),i=document.getElementById("question"),o=document.getElementById("a_text"),s=document.getElementById("b_text"),r=document.getElementById("c_text"),c=document.getElementById("d_text"),l=document.getElementById("submit");let d=0,u=0;function p(){n.forEach((e=>{e.checked=!1}));const t=e[d];a.innerText=`第 ${d+1} 題`,i.innerText=t.question,o.innerText=t.a,s.innerText=t.b,r.innerText=t.c,c.innerText=t.d}p(),l.addEventListener("click",(()=>{const a=function(){let e;return n.forEach((t=>{t.checked&&(e=t.id)})),e}();a&&(a===e[d].correct&&(u+=1),d+=1,d<e.length?p():t.innerHTML=`\n              <h2>您正確回答了  ${u}/${e.length} 個問題</h2>\n              <button onclick="location.reload()">Reload</button>\n          `)}))},oa=()=>{xe(47);const e=document.querySelector(".testimonial"),t=document.querySelector(".user-image"),n=document.querySelector(".username"),a=document.querySelector(".role"),i=[{name:"Alice",position:"飲食評論家",photo:"https://randomuser.me/api/portraits/women/12.jpg",text:"這家牛肉麵店的湯底深邃，充滿著香氣和層次。他們的牛肉絕對是美味的焦點，每一口都令人驚艷。這是一個真正的飲食寶藏！"},{name:"Michael",position:"廚師",photo:"https://randomuser.me/api/portraits/men/28.jpg",text:"作為一名廚師，我非常挑剔，但這家牛肉麵店無疑是我最喜愛的。他們對烹飪細節的關注令人印象深刻。無論您是食客還是廚師，都值得一試。"},{name:"Emily",position:"牛肉麵探索家",photo:"https://randomuser.me/api/portraits/women/33.jpg",text:"我一直在尋找全城最好的牛肉麵，而這家店無疑排在第一位。他們的獨特風味和優質食材使我成為了忠實的常客。"},{name:"David",position:"美食部落客",photo:"https://randomuser.me/api/portraits/men/62.jpg",text:"這家牛肉麵店不僅擁有絕妙的菜單，還有親切的服務。每一次品嚐都是一次美食之旅，我已經向我的讀者強烈推薦了它。"},{name:"Linda",position:"牛肉麵愛好者",photo:"https://randomuser.me/api/portraits/women/55.jpg",text:"這家牛肉麵店給了我一種回家的感覺。他們的食物帶來了濃厚的情感和回憶，每次我都期待著再次光臨。"},{name:"Chris",position:"當地居民",photo:"https://randomuser.me/api/portraits/men/85.jpg",text:"無論你是新來這裡的遊客還是當地居民，這家牛肉麵店總是可以信賴的選擇。他們的味道是這個社區的驕傲。"},{name:"Sophia",position:"家庭主婦",photo:"https://randomuser.me/api/portraits/women/73.jpg",text:"對於忙碌的家庭，這家牛肉麵店總是我們的拯救者。他們的外賣服務快速方便，味道美味，總是能讓整個家庭滿意。"},{name:"Paul",position:"社區居民",photo:"https://randomuser.me/api/portraits/men/92.jpg",text:"我們社區的聚會總是在這家牛肉麵店舉行，因為他們的食物和氛圍無與倫比。這裡不僅是一家餐廳，更是我們社區的家。"},{name:"Olivia",position:"學生",photo:"https://randomuser.me/api/portraits/women/7.jpg",text:"作為一名學生，我經常追求美食的平價選擇。這家牛肉麵店不僅價格合理，還提供了無與倫比的美味。我的同學和我都愛這裡！"},{name:"John",position:"退休人士",photo:"https://randomuser.me/api/portraits/men/16.jpg",text:"退休後，我發現了一個新的愛好，就是品嚐美食。這家牛肉麵店成為了我每週必去的地方。他們的牛肉麵總是能讓我心情愉快，我稱之為 '幸福的一碗'。"}];let o=1;setInterval((function(){const{name:s,position:r,photo:c,text:l}=i[o];e.innerHTML=l,t.src=c,n.innerHTML=s,a.innerHTML=r,o+=1,o>i.length-1&&(o=0)}),5e3)},sa=()=>{xe(48);const e=document.querySelector(".container");function t(){return Math.floor(10*Math.random())+300}for(let n=0;n<15;n+=1){const n=document.createElement("img");n.src=`https://source.unsplash.com/random/${t()}x${t()}`,e.appendChild(n)}},ra=()=>{xe(49);const e=document.getElementById("day49Form"),t=document.getElementById("day49Input"),n=document.getElementById("day49Todos"),a=JSON.parse(localStorage.getItem("todos"));function i(){const e=[];document.querySelectorAll(".todoli").forEach((t=>{e.push({text:t.innerText,completed:t.classList.contains("completed")})})),localStorage.setItem("todos",JSON.stringify(e))}function o(e){let a=t.value;if(e&&(a=e.text),a&&""!==a.trim()){const o=document.createElement("li");o.classList.add("todoli"),e&&e.completed&&o.classList.add("completed"),o.innerText=a,o.addEventListener("click",(()=>{o.classList.toggle("completed"),i()})),o.addEventListener("contextmenu",(e=>{e.preventDefault(),o.remove(),i()})),n.appendChild(o),t.value="",i()}else""===a.trim()&&alert("輸入事項才可以新增")}a&&a.forEach((e=>o(e))),t.focus(),e.addEventListener("submit",(e=>{e.preventDefault(),o()}))},ca=()=>{xe(50);const e=document.querySelectorAll(".screen"),t=document.getElementById("start-btn"),n=document.querySelectorAll(".choose-insect-btn"),a=document.getElementById("game-container"),i=document.getElementById("time"),o=document.getElementById("score"),s=document.getElementById("message");let r=0,c=0,l={};function d(){let e=Math.floor(r/60),t=r%60;e=e<10?`0${e}`:e,t=t<10?`0${t}`:t,i.innerHTML=`時間: ${e}:${t}`,r+=1}function u(){c+=1,c>19&&s.classList.add("visible"),o.innerHTML=`分數: ${c}`,this.classList.add("caught"),setTimeout((()=>this.remove()),2e3),setTimeout(p,1e3),setTimeout(p,1500)}function p(){const e=document.createElement("div");e.classList.add("insect");const{x:t,y:n}=function(){const e=window.innerWidth,t=window.innerHeight;return{x:Math.random()*(e-200)+100,y:Math.random()*(t-200)+100}}();e.style.top=`${n}px`,e.style.left=`${t}px`,e.innerHTML=`<img src="${l.src}" alt="${l.alt}" style="transform: rotate(${360*Math.random()}deg)" />`,e.addEventListener("click",u),a.appendChild(e)}t.addEventListener("click",(()=>e[0].classList.add("up"))),n.forEach((t=>{t.addEventListener("click",(()=>{const n=t.querySelector("img"),a=n.getAttribute("src"),i=n.getAttribute("alt");l={src:a,alt:i},e[1].classList.add("up"),setTimeout(p,1e3),setInterval(d,1e3)}))}))},la=[{path:"/",title:"Home | 50P50D",component:"Day01"},{path:"/01",title:"01-expanding-cards | 50P50D",component:"Day01"},{path:"/02",title:"02-progress-steps | 50P50D",component:"Day02"},{path:"/03",title:"03-rotating-navigation | 50P50D",component:"Day03"},{path:"/04",title:"04-hidden-search | 50P50D",component:"Day04"},{path:"/05",title:"05-blurry-loading | 50P50D",component:"Day05"},{path:"/06",title:"06-scroll-animation | 50P50D",component:"Day06"},{path:"/07",title:"07-Split-Landing-Page | 50P50D",component:"Day07"},{path:"/08",title:"08-form-wave | 50P50D",component:"Day08"},{path:"/09",title:"09-Sound-Board | 50P50D",component:"Day09"},{path:"/10",title:"10-Dad-Jokes | 50P50D",component:"Day10"},{path:"/11",title:"11-Event-Keycodes | 50P50D",component:"Day11"},{path:"/12",title:"12-Faq-Collapse | 50P50D",component:"Day12"},{path:"/13",title:"13-Random-Choice-Picker | 50P50D",component:"Day13"},{path:"/14",title:"14-Animated-Navigation | 50P50D",component:"Day14"},{path:"/15",title:"15-Incrementing-Counter | 50P50D",component:"Day15"},{path:"/16",title:"16-drink-water | 50P50D",component:"Day16"},{path:"/17",title:"17-Movie-App | 50P50D",component:"Day17"},{path:"/18",title:"18-Background-Slider | 50P50D",component:"Day18"},{path:"/19",title:"19-Theme-Clock | 50P50D",component:"Day19"},{path:"/20",title:"20-Button-Ripple-Effect | 50P50D",component:"Day20"},{path:"/21",title:"21-Drag-N-Drop | 50P50D",component:"Day21"},{path:"/22",title:"22-Drawing-App | 50P50D",component:"Day22"},{path:"/23",title:"23-Kinetic-Loader | 50P50D",component:"Day23"},{path:"/24",title:"24-Content-Placeholder | 50P50D",component:"Day24"},{path:"/25",title:"25-Sticky-Navbar | 50P50D",component:"Day25"},{path:"/26",title:"26-Double-Vertical-Slider | 50P50D",component:"Day26"},{path:"/27",title:"27-Toast-Notification | 50P50D",component:"Day27"},{path:"/28",title:"28-Github-Profiles | 50P50D",component:"Day28"},{path:"/29",title:"29-Double-Click-Heart | 50P50D",component:"Day29"},{path:"/30",title:"30-Auto-Text-Effect | 50P50D",component:"Day30"},{path:"/31",title:"31-Password-Generator | 50P50D",component:"Day31"},{path:"/32",title:"32-Good-Cheap-Fast | 50P50D",component:"Day32"},{path:"/33",title:"33-Notes-App | 50P50D",component:"Day33"},{path:"/34",title:"34-Animated-Count-down | 50P50D",component:"Day34"},{path:"/35",title:"35-Image-Carousel | 50P50D",component:"Day35"},{path:"/36",title:"36-Hoverboard | 50P50D",component:"Day36"},{path:"/37",title:"37-Pokedex | 50P50D",component:"Day37"},{path:"/38",title:"38-Mobile-Tab-Navigation | 50P50D",component:"Day38"},{path:"/39",title:"39-Password-Strength-Backgrounds | 50P50D",component:"Day39"},{path:"/40",title:"40-3d-Background-Boxes | 50P50D",component:"Day40"},{path:"/41",title:"41-Verify-Account-Ui | 50P50D",component:"Day41"},{path:"/42",title:"42-Live-User-Filter | 50P50D",component:"Day42"},{path:"/43",title:"43-Feedback-Ui-Design | 50P50D",component:"Day43"},{path:"/44",title:"44-Custom-Range-Slider | 50P50D",component:"Day44"},{path:"/45",title:"45-Netflix-Mobile-Navigation | 50P50D",component:"Day45"},{path:"/46",title:"46-Quiz-App | 50P50D",component:"Day46"},{path:"/47",title:"47-Testimonial-Box-Switcher | 50P50D",component:"Day47"},{path:"/48",title:"48-Random-Image-Feed | 50P50D",component:"Day48"},{path:"/49",title:"49-Todo-List | 50P50D",component:"Day49"},{path:"/50",title:"50-Insect-Catch-Game | 50P50D",component:"Day50"}];function da(e){document.querySelectorAll("header nav a").forEach((t=>{const n=`/${t.getAttribute("href").split("/")[1]}`,a=t.parentElement;a&&a.classList.toggle("active",e.split("/")[1]===n.split("/")[1])}))}function ua(e){const t=document.getElementById("root");if(t)for(;t.firstChild;)t.removeChild(t.firstChild);else console.error("mainContainer is null or undefined");function n(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=document.createElement("div");n.innerHTML=t,e.appendChild(n)}switch(e){case"Home":case"Day01":n(t,c),Le();break;case"Day02":n(t,l),Se();break;case"Day03":n(t,m),ke();break;case"Day04":n(t,f),De();break;case"Day05":n(t,v),Te();break;case"Day06":n(t,L),qe();break;case"Day07":n(t,S),Ce();break;case"Day08":n(t,k),Ae();break;case"Day09":n(t,C),je();break;case"Day10":n(t,A),xn();break;case"Day11":n(t,j),Ln();break;case"Day12":n(t,O),Sn();break;case"Day13":n(t,B),kn();break;case"Day14":n(t,P),Dn();break;case"Day15":n(t,R),Tn();break;case"Day16":n(t,N),qn();break;case"Day17":n(t,I),Cn();break;case"Day18":n(t,M),An();break;case"Day19":n(t,F),jn();break;case"Day20":n(t,H),On();break;case"Day21":n(t,_),Bn();break;case"Day22":n(t,$),Pn();break;case"Day23":n(t,U),Rn();break;case"Day24":n(t,z),Nn();break;case"Day25":n(t,J),In();break;case"Day26":n(t,W),Mn();break;case"Day27":n(t,G),Fn();break;case"Day28":n(t,V),Hn();break;case"Day29":n(t,K),_n();break;case"Day30":n(t,Q),$n();break;case"Day31":n(t,Y),Un();break;case"Day32":n(t,X),zn();break;case"Day33":n(t,Z),Jn();break;case"Day34":n(t,ee),Wn();break;case"Day35":n(t,se),Gn();break;case"Day36":n(t,re),Vn();break;case"Day37":n(t,ce),Kn();break;case"Day38":n(t,le),Qn();break;case"Day39":n(t,de),Yn();break;case"Day40":n(t,ue),Xn();break;case"Day41":n(t,pe),Zn();break;case"Day42":n(t,me),ea();break;case"Day43":n(t,fe),ta();break;case"Day44":n(t,he),na();break;case"Day45":n(t,ve),aa();break;case"Day46":n(t,ge),ia();break;case"Day47":n(t,ye),oa();break;case"Day48":n(t,be),sa();break;case"Day49":n(t,Ee),ra();break;case"Day50":n(t,we),ca();break;case"NotFound":n(t,r);break;default:console.error(`Unknown component: ${e}`)}}function pa(){const e=window.location.hash.substring(1),n=la.find((n=>t(n.path)(e)));document.title=n?n.title||"Default Title":void 0===n?la.find((()=>t("/"))).title:"404 - Page Not Found",""===e?(ua("Home"),da("/home")):n?(ua(n.component),da(e)):ua("NotFound")}window.addEventListener("hashchange",pa),pa()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,